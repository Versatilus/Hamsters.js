{"version":3,"sources":["webpack:///webpack/bootstrap e080e2cea4a5768083ed","webpack:///./src/hamsters.js","webpack:///./src/core/version.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/core/data.js","webpack:///./src/core/pool.js","webpack:///./src/core/wheel.js","webpack:///./src/core/logger.js","webpack:///./src/core/tools.js","webpack:///./src/core/memoizer.js"],"names":["hamstersjs","persistence","memoize","atomics","debug","version","maxThreads","logicalThreads","tools","habitat","data","pool","logger","memoizer","run","hamstersRun","promise","hamstersPromise","await","hamstersAwait","wheel","selectHamsterWheel","init","initializeLibrary","startOptions","info","processStartOptions","spawnHamsters","habitatKeys","key","hasOwnProperty","indexOf","toLowerCase","hamsters","taskOptions","index","tasks","push","threadId","task","resolve","reject","trackThread","dataArray","arrayFromIndex","input","array","indexes","hamsterWheel","legacy","count","params","functionToRun","scope","id","length","threads","aggregate","output","workers","operator","prepareJob","dataType","determineSubArrays","Promise","hamstersTask","scheduleTask","newTask","then","results","catch","error","messsage","onSuccess","onError","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","browser","isBrowser","webWorker","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferrable","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","isIE","isInternetExplorer","determineGlobalThreads","Worker","locateWorkerObject","sharedWorker","locateSharedWorkerObject","max","navigator","hardwareConcurrency","userAgent","os","cpus","SharedWorker","window","RegExp","isNaN","test","process","importScripts","global","Uint8Array","isIE10","lacksWorkerSupport","legacyAgents","workerBlob","generateBlob","SharedHamster","workerURI","e","SharedArrayBuffer","Proxy","hamstersHabitat","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","createBlob","createDataBlob","generateWorkerBlob","determineSubArrayIndexes","subArrayFromIndex","processDataType","sortOutput","sortArray","getOutput","prepareOutput","prepareFunction","feedHamster","messageWorker","prepareMeal","prepareHamsterFood","hamsterFood","hamstersJob","hamster","port","postMessage","ie10","prepareTransferBuffers","buffers","buffer","Array","isArray","ArrayBuffer","functionBody","String","startingIndex","endingIndex","substring","workerLogic","functionString","hamsterBlob","URL","createObjectURL","typedArrayFromBuffer","arr","order","prototype","sort","call","a","b","reverse","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","n","i","size","Math","ceil","start","end","slice","subarray","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","round","random","reduce","concat","len","bufferLength","offset","set","threadArrays","hamstersData","running","pending","queueWork","addWorkToPending","beginWork","startTask","fetchHamster","grabHamster","markThreadReady","removeThreadFromRunning","keepTrackOfThread","item","promiseResolve","promiseReject","spawnHamster","splice","workerid","trainHamster","onThreadResponse","message","returnOutputAndRemoveTask","processQueue","shift","terminate","onThreadError","errorFromThread","onmessage","onerror","worker","regular","hamsterPool","workerScaffold","regularScaffold","legacyScaffold","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","prepareReturn","returnObject","self","Function","setTimeout","transferable","hamstersWheel","logBook","warning","infoLog","warningLog","errorLog","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","searchLogEntries","searchLogBook","timeStamp","Date","now","timeStampedMessage","console","errorMessage","lineno","filename","eventType","logBookEntries","string","searchResults","searchString","eventTypeResults","tmpEntries","findStringInLogBook","finalResults","allResults","findStringInLogBookAllTypes","all","total","hamstersLogger","parseJson","parseJsonOnThread","stringifyJson","stringifyJsonOnThread","inputAmount","runHamsters","JSON","parse","json","stringify","hamstersTools","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","fn","cacheItem","cachedResult","cache","itemToCache","cachedItems","hamstersMemoizer"],"mappings":"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,oBAAlC,CAApB;AACA,0BAAaG,SAAb,GAAyBH,UAAzB;AACD,UAJD,CAIE,OAAOI,CAAP,EAAU;AACV,gBAAK7E,MAAL,GAAc,IAAd;AACD;AACF;AACD;AACA,WAAG,CAAC,KAAKA,MAAT,EAAiB;AACf,gBAAO,KAAKyC,OAAL,MAAkB,CAAC,KAAKW,kBAAL,EAA1B;AACD;AACF;;;gDAE0B;AACzB,cAAO,OAAO0B,iBAAP,KAA6B,WAApC;AACD;;;uCAEiB;AAChB,cAAO,OAAOC,KAAP,KAAiB,WAAxB;AACD;;;;;;AAGH,KAAIC,kBAAkB,IAAIxH,OAAJ,EAAtB;;AAEA,KAAG,OAAOkE,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBqD,eAAjB;AACD,E;;;;;;;AC5HD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;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","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e080e2cea4a5768083ed","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n * Title: Hamsters.js\n * Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library\n * Author: Austin K. Smith\n * Contact: austin@asmithdev.com\n * Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n * License: Artistic License 2.0\n */\n\n'use strict';\n\n// Import core functionality\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersWheel from './core/wheel';\nimport hamstersTools from './core/tools';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  constructor() {\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.debug = false;\n    this.version = hamstersVersion;\n    this.maxThreads = hamstersHabitat.logicalThreads;\n    this.tools = hamstersTools;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.run = this.hamstersRun;\n    this.promise = this.hamstersPromise;\n    this.await = this.hamstersAwait;\n    this.wheel = this.pool.selectHamsterWheel();\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    this.logger.info(`Preparing the hamster wheels & readying hamsters`);\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    this.pool.spawnHamsters(this.persistence, this.wheel, this.maxThreads);\n    delete this.init;\n  }\n\n  processStartOptions(startOptions) {\n    let habitatKeys = ['worker', 'sharedWorker', 'legacy'];\n    for (var key in startOptions) {\n      if (startOptions.hasOwnProperty(key)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          hamsters.habitat[key] = startOptions[key];\n        } else {\n          hamsters[key] = startOptions[key];\n        }\n      }\n    }\n  }\n\n  newTask(taskOptions) {\n    let index = this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[(index - 1)];\n  }\n\n  legacyHamsterWheel(threadId, task, resolve, reject) {\n    this.pool.trackThread(task, threadId);\n    let dataArray = hamstersData.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    hamsterWheel.legacy(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  hamstersTask(params, functionToRun, scope) {\n    this.id = scope.pool.tasks.length;\n    this.threads = params.threads || 1;\n    this.count = 0;\n    this.input = params;\n    this.aggregate = params.aggregate || true;\n    this.output = [];\n    this.workers = [];\n    this.operator = scope.data.prepareJob(functionToRun, scope.habitat);\n    this.memoize = params.memoize || false;\n    this.dataType = params.dataType ? params.dataType.toLowerCase() : null;\n    if(params.array && this.threads !== 1) {\n      this.indexes = scope.data.determineSubArrays(params.array, this.threads);\n    }\n  }\n\n  // async hamstersAwait(params, functionToRun) {\n  //   let task = new this.hamstersTask(params, functionToRun, this);\n  //   let results = null;\n  //   try {\n  //     results = await this.pool.scheduleTask(task, this.wheel, this.maxThreads);\n  //     return results;\n  //   } catch (error) {\n  //     return this.logger.error(error.messsage);\n  //   }\n  // }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      let task = new this.hamstersTask(params, functionToRun, this);\n      this.pool.scheduleTask(newTask, this.persistence, this.wheel, this.maxThreads).then(function(results) {\n        resolve(results);\n      }).catch(function(error) {\n        hamstersLogger.error(error.messsage, reject);\n      });\n    });\n  }\n\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    let newTask = new this.hamstersTask(params, functionToRun, this);\n    this.pool.scheduleTask(newTask, this.persistence, this.wheel, this.maxThreads).then(function(results) {\n      onSuccess(results);\n    }).catch(function(error) {\n      hamstersLogger.error(error.messsage, onError);\n    });\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nconst majorVersion = 4;\nconst minorVersion = 2;\nconst patchVersion = 2;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.legacy = this.isLegacyEnvironment();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer;\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n  }\n\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.isNode() && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  locateWorkerObject() {\n    return Worker || null;\n  }\n\n  locateSharedWorkerObject() {\n    return SharedWorker || null;\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWebWorker();\n  }\n\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    // Force legacy mode for known devices that don't support threading\n    if (this.isBrowser() && !this.isReactNative()) {\n      let isIE10 = this.habitat.isIE(10);\n      let userAgent = navigator.userAgent;\n      let lacksWorkerSupport = (typeof this.Worker === 'undefined');\n      let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n      if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1 || isIE10) {\n        this.legacy = true;\n      }\n    }\n    // Detect sharedWorker support for use within webworkers\n    if (this.webWorker && typeof this.SharedWorker !== 'undefined') {\n      try {\n        let workerBlob = hamstersData.generateBlob();\n        let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n        hamstersData.workerURI = workerBlob;\n      } catch (e) {\n        this.legacy = true;\n      }\n    }\n    // Final check, if we're in a shell environment or we have no worker object use legacy mode\n    if(!this.legacy) {\n      return this.isShell() || !this.locateWorkerObject();\n    }\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersHabitat from './habitat';\n\n'use strict';\n\nclass data {\n\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.generateBlob = this.generateWorkerBlob;\n    this.determineSubArrays = this.determineSubArrayIndexes;\n    this.arrayFromIndex = this.subArrayFromIndex;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n    this.prepareMeal = this.prepareHamsterFood;\n    this.workerURI = null;\n  }\n\n\n  prepareHamsterFood(task, threadId) {\n    let hamsterFood = {};\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && key !== 'array') {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    if (task.indexes && task.threads !== 1) {\n      hamsterFood.array = this.data.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    } else {\n      hamsterFood.array = task.input.array;\n    }\n    if (task.hamstersJob && !hamsterFood.hamstersJob) {\n      hamsterFood.hamstersJob = hamstersJob;\n    }\n    return hamsterFood;\n  }\n\n  messageWorker(hamster, hamsterFood) {\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if (hamstersHabitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.prepareTransferBuffers(hamsterFood));\n  }\n\n  prepareTransferBuffers(hamsterFood) {\n    let buffers = [];\n    let key = null;\n    if(hamstersHabitat.transferrable) {\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n    }\n    return buffers;\n  }\n\n\n  prepareFunction(functionBody, habitat) {\n    if (!habitat.legacy) {\n      functionBody = String(functionBody);\n      if (!habitat.webWorker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  generateWorkerBlob(workerLogic) {\n    let functionString = '(' + String(workerLogic) + ')();';\n    let hamsterBlob = this.createBlob(functionString);\n    return URL.createObjectURL(hamsterBlob);\n  }\n\n  processDataType(dataType, buffer) {\n    if(hamstersHabitat.transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  prepareOutput(task) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType);\n    }\n    return task.output;\n  }\n\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  determineSubArrayIndexes(array, n) {\n    var i = 0;\n    let size = Math.ceil(array.length/n);\n    var indexes = [];\n    while(i < array.length) {\n      var start = i;\n      var end = ((i + size) - 1);\n      indexes.push({\n        start: start, \n        end: end\n      });\n      (i += size);\n    }\n    return indexes;\n  }\n\n  subArrayFromIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index.start, index.end);\n    } else {\n      return array.subarray(index.start, index.end);\n    }\n  }\n\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType || !hamstersHabitat.transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersWheel from './wheel';\nimport hamstersLogger from './logger';\n\n'use strict';\n\nclass pool {\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.queueWork = this.addWorkToPending;\n    this.beginWork = this.startTask;\n    this.fetchHamster = this.grabHamster;\n    this.selectHamsterWheel = this.selectHamsterWheel;\n    this.markThreadReady = this.removeThreadFromRunning;\n    this.trackThread = this.keepTrackOfThread;\n  }\n\n  addWorkToPending(task, id, resolve, reject) {\n  \tthis.pending.push({\n  \t\titem: task,\n  \t\tthreadId: id,\n  \t\tpromiseResolve: resolve,\n  \t\tpromiseReject: reject\n  \t});\n  }\n\n  grabHamster(threadId, persistence, wheel) {\n    if(persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster(hamstersHabitat, wheel, hamstersData.workerURI);\n  }\n\n  newTask(taskOptions) {\n    let index = this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[(index - 1)];\n  }\n\n  startTask(task, resolve, reject) {\n    return this.wheel(task, resolve, reject);\n  }\n\n  removeThreadFromRunning(task, id) {\n    this.running.splice(this.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n  processQueue(hamster, item) {\n    if (!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  spawnHamsters(persistence, wheel, maxThreads) {\n  \tlet workerURI = null;\n    if(hamstersHabitat.legacy) {\n      return;\n    }\n    if(hamstersHabitat.browser) {\n      workerURI = hamstersData.generateBlob(wheel);\n    }\n    if (persistence) {\n      hamstersLogger.info(`${maxThreads} Logical Threads Detected, Spawning ${maxThreads} Hamsters`);\n      for (maxThreads; maxThreads > 0; maxThreads--) {\n        this.threads.push(this.spawnHamster(wheel, workerURI));\n      }\n      hamstersLogger.info(`${this.threads.length} hamsters ready and awaiting instructions`);\n    }\n  }\n\n  spawnHamster(wheel, workerURI) {\n    if (hamstersHabitat.ie10) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(workerURI, 'SharedHamsterWheel');\n    }\n    if ((hamstersHabitat.node || hamstersHabitat.reactNative) && !hamstersHabitat.browser) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    return new hamstersHabitat.Worker(workerURI);\n  }\n\n  hamsterWheel(task, persistence, wheel, resolve, reject) {\n    let threadId = this.running.length;\n    if(this.maxThreads === threadId) {\n      return this.queueWork(task, threadId, resolve, reject);\n    }\n    let hamsterFood = hamstersData.prepareMeal(task, threadId);\n    let hamster = this.grabHamster(threadId, persistence, wheel);\n    this.trainHamster(threadId, task, hamster, persistence, resolve, reject);\n    this.trackThread(task, threadId);\n    hamstersData.feedHamster(hamster, hamsterFood);\n    task.count += 1; //Increment count, thread is running\n  }\n\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = hamstersData.getOutput(task, hamstersHabitat.transferrable);\n    if (task.sort) {\n      output = hamstersData.sortOutput(output, task.sort);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n    resolve(output);\n  }\n\n  trainHamster(threadId, task, hamster, persistence, resolve, reject) {\n    let pool = this;\n    // Handle successful response from a thread\n    function onThreadResponse(message) {\n      let results = message.data;\n      pool.running.splice(pool.running.indexOf(threadId), 1); //Remove thread from running pool\n    \ttask.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n      task.output[threadId] = results.data; // Save results data to output\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        pool.processQueue(pool.pending.shift());\n      }\n      if (!persistence && !hamstersHabitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    // Handle error response from a thread\n    function onThreadError(error) {\n      hamstersLogger.errorFromThread(error, reject);\n    }\n    // Register on message/error handlers\n    if (hamstersHabitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  selectHamsterWheel() {\n    if (hamstersHabitat.legacy) {\n      return hamstersWheel.legacy;\n    }\n    if(hamstersHabitat.webWorker) {\n      return hamstersWheel.worker;\n    }\n    return hamstersWheel.regular;\n  }\n\n  scheduleTask(task, persistence, wheel, maxThreads) {\n  \tif(this.running.length === maxThreads) {\n  \t\treturn this.addWorkToPending(task);\n  \t}\n  \treturn new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        this.hamsterWheel(task, persistence, wheel, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n  \n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads poold to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\n\n'use strict';\n\nclass wheel {\n\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  workerScaffold() {\n    'use strict';\n\n    var params = {};\n    var rtn = {};\n\n    addEventListener('connect', function(incomingConnection) {\n      const port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', function(incomingMessage) {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  regularScaffold() {\n    'use strict';\n\n    var params = {};\n    var rtn = {};\n\n    function prepareReturn(returnObject) {\n      var dataType = returnObject.dataType;\n      if(dataType) {\n        returnObject.data = typedArrayFromBuffer(dataType, returnObject.data);\n      }\n      return returnObject;\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function prepareTransferBuffers(hamsterFood) {\n      let buffers = [];\n      let key = null;\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n      return buffers;\n    }\n\n    self.onmessage = function(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      new Function(params.hamstersJob)();\n      postMessage(prepareReturn(rtn), prepareTransferBuffers(rtn));\n    };\n  }\n\n  legacyScaffold(params, resolve, reject) {\n    setTimeout(function() {\n      var rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      params.hamstersJob();\n      if (params.dataType) {\n        rtn.data = hamstersData.processDataType(params.dataType, rtn.data, hamstersHabitat.transferable);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersVersion from './version';\n\n'use strict';\n\nclass logger {\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Info: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('info', timeStampedMessage);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Warning: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('warning', timeStampedMessage);\n    console.warning(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Error: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('error', timeStampedMessage);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, string) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(string) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    let eventTypeResults;\n    if(eventType) {\n      tmpEntries = this.logBook[eventType];\n      finalResults = this.findStringInLogBook(tmpEntries, string);\n    } else {\n      let allResults = this.findStringInLogBookAllTypes(this.logBook);\n      if(all.length !== 0) {\n        finalResults = [finalResults, eventTypeResults].reduce(function(a, b) {\n          return a.concat(b);\n        });\n      }\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass tools {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.parseJson = this.parseJsonOnThread;\n    this.stringifyJson = this.stringifyJsonOnThread;\n  }\n\n  randomArray(inputAmount, onSuccess) {\n    let array = [];\n    while(inputAmount > 0) {\n      array[inputAmount] = Math.round(Math.random() * (100 - 1) + 1);\n      inputAmount -= 1;\n    }\n    onSuccess(array);\n  }\n\n  parseJsonOnThread(string, onSuccess) {\n    this.runHamsters({input: string}, function() {\n      rtn.data = JSON.parse(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  stringifyJsonOnThread(json, onSuccess) {\n    this.runHamsters({input: json}, function() {\n      rtn.data = JSON.stringify(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n}\n\nvar hamstersTools = new tools();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersTools;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/tools.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass memoizer {\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n  \tfor(var key in this.cache) {\n  \t\tif(this.cache.hasOwnProperty(key)) {\n  \t\t\tif(cacheItem[key].fn === cacheItem.fn) {\n  \t\t\t\tif(cacheItem[key].input === cacheItem.data) {\n  \t\t\t\t\tcachedResult = cacheItem[key].input;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn cachedResult || false;\n  }\n\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/memoizer.js"],"sourceRoot":""}