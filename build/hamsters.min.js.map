{"version":3,"sources":["webpack:///webpack/bootstrap 4a228497205a0e1cb6b9","webpack:///./src/hamsters.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js"],"names":["hamstersjs","version","maxThreads","determineGlobalMaxThreads","debug","persistence","memoize","atomics","legacy","tools","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","habitat","pool","uri","tasks","errors","threads","running","pending","run","runHamsters","promise","hamstersPromise","loop","hamstersLoop","parseJson","parseJsonOnThread","stringifyJson","stringifyJsonOnThread","init","initializeLibrary","startOptions","processStartOptions","browser","reactNative","setupBrowserSupport","worker","SharedWorker","setupWorkerSupport","node","Worker","global","wheel","legacyHamsterWheel","hamsterWheel","spawnHamsters","chewGarbage","RegExp","isNaN","test","navigator","userAgent","max","hardwareConcurrency","toLowerCase","indexOf","isIE","workerBlob","generateWorkerBlob","SharedHamster","e","key","hasOwnProperty","hamsters","URL","createObjectURL","createBlob","String","giveHamsterWork","i","push","spawnHamster","ie10","workerWorker","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","self","addEventListener","port","ports","start","params","data","rtn","dataType","fn","eval","postMessage","results","typedArrayFromBuffer","buffer","types","Uint32Array","Uint16Array","Uint8Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","onmessage","Function","taskOptions","id","thread_id","task","resolve","reject","dataArray","subArrayFromIndex","array","indexes","legacyProcessor","count","n","threadArrays","size","Math","ceil","length","slice","subarray","end","index","input","onSuccess","prepareFunction","operator","startIndex","limit","incrementBy","functionBody","startingIndex","endingIndex","substring","string","JSON","parse","output","json","stringify","functionToRun","Promise","newTask","work","numberOfWorkers","sortOrder","arrayType","performance","workers","cacheResults","determineSubArrayIndexes","workerCount","prepareAndSaveTaskOptions","hamstersWork","then","catch","error","console","message","inputArray","threadId","hamster","poolThread","trainHamster","trackThread","feedHamster","inputParams","info","Date","getTime","food","buffers","scope","onThreadResponse","threadResponse","chewThread","getOutput","order","sort","processQueue","shift","terminate","onThreadError","libraryScope","timeStamp","now","lineno","filename","onerror","round","random","transferrable","reduce","a","b","concat","len","bufferLength","processDataType","offset","set","cachedResult","cache","arr","Array","prototype","call","reverse","SharedArrayBuffer","hamsterFood","workerid","taskid","startTime","cb","agg","aggregate","setTimeout","success","item","splice","processData","module","exports","isBrowser","isWorker","isNode","isReactNative","shell","isShell","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","window","process","importScripts","Proxy","hamstersHabitat"],"mappings":"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oD,IAAnE,CAAwEC,UAAUC,SAAlF,CAAR;AACD;;;8BAEQ;AACP,cAAO,QAAOmM,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,eAAmB,UAAlD,IAAgE,CAAC,KAAKZ,SAAL,EAAjE,IAAqF,CAAC,KAAKC,QAAL,EAA7F;AACD;;;gCAEU;AACT,cAAO,OAAOY,aAAP,KAAyB,UAAhC;AACD;;;qCAEe;AACd,cAAO,CAAC,KAAKX,MAAL,EAAD,IAAkB,QAAOnM,MAAP,yCAAOA,MAAP,OAAkB,QAA3C;AACD;;;+BAES;AACR,cAAO,KAAKiM,SAAL,MAAoB,CAAC,KAAKE,MAAL,EAArB,IAAsC,CAAC,KAAKD,QAAL,EAAvC,IAA0D,CAAC,KAAKE,aAAL,EAAlE;AACD;;;oDAE8B;AAC7B,cAAO,OAAOtI,UAAP,KAAsB,WAA7B;AACD;;;2CAEqB;AACpB,cAAQ,KAAKwI,OAAL,MAAkB,OAAOvM,MAAP,KAAkB,WAA5C;AACD;;;gDAE0B;AACzB,cAAO,OAAOmL,iBAAP,KAA6B,WAApC;AACD;;;uCAEiB;AAChB,cAAO,OAAO6B,KAAP,KAAiB,WAAxB;AACD;;;;;;AAGH,KAAIC,kBAAkB,IAAI9O,OAAJ,EAAtB;;AAEA,KAAG,OAAO6N,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBgB,eAAjB;AACD,E;;;;;;;ACvED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a228497205a0e1cb6b9","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nimport hamstersHabitat from './core/habitat';\n\nclass hamstersjs {\n   constructor() {\n    this.version = '4.2.2';\n    this.maxThreads = this.determineGlobalMaxThreads();\n    this.debug = false;\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.legacy = false;\n    this.tools = {\n      randomArray: this.randomArray,\n      aggregateArrays: this.aggregateThreadOutputs,\n      splitArrays: this.splitArrayIntoSubArrays\n    };\n    this.habitat = hamstersHabitat;\n    this.pool = {\n      uri: null,\n      tasks: [],\n      errors: [],\n      threads: [],\n      running: [],\n      pending: []\n    };\n    this.run = this.runHamsters;\n    this.promise = this.hamstersPromise;  \n    this.loop = this.hamstersLoop;\n    this.parseJson = this.parseJsonOnThread;\n    this.stringifyJson = this.stringifyJsonOnThread;\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    if(typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    if(this.habitat.browser && !this.habitat.reactNative) {\n      this.setupBrowserSupport();\n    }\n    if(this.habitat.worker && typeof SharedWorker !== 'undefined') {\n      this.setupWorkerSupport();\n    }\n    if(this.habitat.node || this.habitat.reactNative) {\n      if(typeof this.Worker !== 'undefined') {\n        global.Worker = this.Worker;\n      }\n    }\n    if(this.habitat.legacy) {\n      this.wheel = this.legacyHamsterWheel;\n    } else {\n      this.wheel = this.hamsterWheel;\n      this.spawnHamsters();\n    }\n    this.chewGarbage(startOptions);\n  }\n\n  isIE(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  determineGlobalMaxThreads() {\n    // Default to global thread count of 4\n    let max = 4;\n    // Detect logical core count on machine\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      // Firefox per origin limit is 20\n      if(navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && max > 20) {\n        max = 20;\n      }\n    }\n    // Got it\n    return max;\n  }\n\n\n  setupBrowserSupport() {\n    if(typeof Worker === 'undefined' || ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'].indexOf(navigator.userAgent) !== -1 || this.isIE(10)) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  setupWorkerSupport() {\n    try {\n      let workerBlob = this.generateWorkerBlob();\n      let SharedHamster = new SharedWorker(workerBlob, 'SharedHamsterWheel');\n      this.pool.uri = workerBlob;\n    } catch(e) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  processStartOptions(startOptions) {\n    for(var key in startOptions) {\n      if(startOptions.hasOwnProperty(key)) {\n        hamsters[key] = startOptions[key];\n      }\n    }\n  }\n\n  generateWorkerBlob() {\n    return URL.createObjectURL(this.createBlob('(' + String(this.giveHamsterWork()) + ')();'));\n  }\n\n  spawnHamsters() {\n    if(this.habitat.browser) {\n      this.pool.uri = this.generateWorkerBlob();\n    }\n    if(this.persistence) {\n      let i = this.maxThreads;\n      for (i; i > 0; i--) {\n        this.pool.threads.push(this.spawnHamster());\n      }\n    }\n  }\n\n  spawnHamster() {\n    if(this.habitat.ie10) {\n      return new Worker('src/common/wheel.min.js');\n    } else if(this.habitat.worker) {\n      return new SharedWorker(this.pool.uri, 'SharedHamsterWheel');\n    } else if (this.habitat.node) {\n      return new Worker(this.giveHamsterWork());\n    } else {\n      return new Worker(this.pool.uri);\n    }\n  }\n\n  giveHamsterWork() {\n    if(this.habitat.worker) {\n      return this.workerWorker;\n    }\n    return this.worker;\n  }\n\n  createBlob(textContent) {\n    if(!Blob) {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  workerWorker() {\n    self.addEventListener(\"connect\", function(e) {\n      const port = e.ports[0];\n      port.start();\n      port.addEventListener(\"message\", function(e) {\n        self.params = e.data;\n        self.rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        let fn = eval(\"(\" + params.fn + \")\");\n        if (fn) {\n          fn();\n        }\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  worker() {\n    self.typedArrayFromBuffer = function(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if(!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    };\n\n    self.onmessage = function(e) {\n      self.params = e.data;\n      self.rtn = {\n        data: [],\n        dataType: params.dataType\n      };\n      let fn = new Function(params.fn);\n      if(fn) {\n        fn();\n      }\n      if(params.dataType) {\n        rtn.data = self.typedArrayFromBuffer(params.dataType, rtn.data);\n        postMessage({\n          results: rtn\n        }, [rtn.data.buffer]);\n      } else {\n        postMessage({\n          results: rtn\n        });\n      }\n    };\n  }\n\n  newTask(taskOptions) {\n    this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[taskOptions.id];\n  }\n\n  legacyHamsterWheel(thread_id, task, resolve, reject) {\n    // this.trackThread(task, thread_id);\n    var dataArray = this.subArrayFromIndex(task.params.array, task.indexes[thread_id]);\n    this.legacyProcessor(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  chewGarbage(startOptions) {\n    delete this.init;\n    startOptions = null;\n  }\n\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n\n  determineSubArrayIndexes(array, n) {\n    var i = 0;\n    let size = Math.ceil(array.length/n);\n    var indexes = [];\n    while(i < array.length) {\n      indexes.push({\n        start: i, \n        end: ((i += size) - 1)\n      });\n    }\n    return indexes;\n  }\n\n  subArrayFromIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index.start, index.end);\n    } else {\n      return array.subarray(index.start, index.end);\n    }\n  }\n\n  hamstersLoop(input, onSuccess) {\n    let params = {\n      run: this.prepareFunction(input.operator),\n      init: input.startIndex || 0,\n      limit: input.limit,\n      array: input.array,\n      incrementBy: input.incrementBy || 1,\n      dataType: input.dataType || null,\n      worker: this.habitat.worker\n    };\n    this.runHamsters(params, function() {\n      let operator = params.run;\n      if(typeof operator === \"string\") {\n        if(params.worker) {\n          operator = eval(\"(\" + operator + \")\");\n        } else {\n          operator = new Function(operator);\n        }\n      }\n      if(!params.limit) {\n        params.limit = params.array.length;\n      }\n      var i = params.init;\n      for (i; i < params.limit; i += params.incrementBy) {\n        rtn.data[i] = operator(params.array[i]);\n      }\n    }, function(rtn) {\n      onSuccess(rtn);\n    }, input.threads, 1, input.dataType);\n  }\n\n  prepareFunction(functionBody) {\n    if(!this.habitat.legacy) {\n      functionBody = String(functionBody);\n      if(!this.habitat.worker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  parseJsonOnThread(string, onSuccess) {\n    this.runHamsters({input: string}, function() {\n      rtn.data = JSON.parse(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  stringifyJsonOnThread(json, onSuccess) {\n    this.runHamsters({input: json}, function() {\n      rtn.data = JSON.stringify(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n       let task = this.newTask(params);\n       let results = this.work(task, functionToRun);\n       if(results) {\n        resolve(results);\n       } else {\n        reject('Error processing');\n       }\n    });\n  }\n\n  // Converts old run params into new format\n  prepareAndSaveTaskOptions(params, functionToRun, onSuccess, numberOfWorkers, aggregateThreadOutputs, dataType, memoize, sortOrder) {\n    var arrayType = 'na';\n    if(params.dataType) {\n      arrayType = params.dataType.toLowerCase();\n    } \n    if(dataType) {\n      arrayType = dataType.toLowerCase();\n    }\n    var task = {\n      params: params,\n      id: this.pool.tasks.length,\n      count: 0,\n      performance: [],\n      workers: [],\n      input: [],\n      output: [],\n      threads: params.threads || numberOfWorkers || 1,\n      operator: this.prepareFunction(functionToRun),\n      sortOrder: params.sortOrder || sortOrder,\n      cacheResults: params.memoize || memoize || false,\n      aggregateThreadOutputs: aggregateThreadOutputs || false,\n      dataType: arrayType,\n      onSuccess: onSuccess\n    };\n    if(params.array) {\n      task.indexes = this.determineSubArrayIndexes(params.array, task.threads);\n    }\n    return this.newTask(task);\n  }\n\n  runHamsters(params, functionToRun, onSuccess, numberOfWorkers, aggregateThreadOutputs, dataType, memoize, sortOrder) {\n    // Legacy processing use only 1 simulated thread, avoid doing extra work splitting & aggregating\n    let workerCount = (this.habitat.legacy ? 1 : (numberOfWorkers || 1));\n    let task = this.prepareAndSaveTaskOptions(params, functionToRun, onSuccess, workerCount, aggregateThreadOutputs, dataType, memoize  , sortOrder);\n    this.hamstersWork(task).then(function(results) {\n      onSuccess(results);\n    }).catch(function(error) {\n      console.error(error.message, error);\n    });\n  }\n\n  hamstersWork(task) {\n    return new Promise((resolve, reject) => {\n      let i = 0;\n      while(i < task.threads) {\n        this.wheel(i, task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n\n  hamsterWheel(inputArray, task, resolve, reject) {\n    let threadId = this.pool.running.length;\n    var hamster = {};\n    if(this.maxThreads === threadId) {\n      this.poolThread(inputArray, task, threadId, resolve, reject);\n    } else {\n      if(this.persistence) {\n        hamster = this.pool.threads[threadId];\n      } else {\n        hamster = spawnHamster();\n      }\n      this.trainHamster(threadId, task, hamster, resolve, reject);\n      this.trackThread(task, threadId);\n      this.feedHamster(hamster, task.inputParams, inputArray);\n      task.count += 1; //Increment count, thread is running\n      if(this.debug === 'verbose') {\n        console.info('Spawning Hamster #' + thread_id + ' @ ' + new Date().getTime());\n      }\n    }\n  }\n\n  feedHamster(hamster, task) {\n    if(this.habitat.worker) {\n      return hamster.port.postMessage(task.food);\n    }\n    if(this.habitat.ie10) {\n      return hamster.postMessage(task.food);\n    }\n    let buffers = [], key;\n    for(key in task.food) {\n      if(task.food.hasOwnProperty(key) && task.food[key] && task.food[key].buffer) {\n        buffers.push(task.food[key].buffer);\n      }\n    }\n    return hamster.postMessage(task.food,  buffers);\n  } \n\n  trainHamster(threadId, task, hamster, resolve, reject) {\n    var scope = this;\n    // Handle successful response from a thread\n    var onThreadResponse = function(e, results) {\n      let threadResponse = e.data.results;\n      scope.chewThread(task, threadId);\n      results = e.data.results;\n      task.output[threadId] = results.data;\n      if(task.workers.length === 0 && task.count === task.threads) {\n        var output = scope.getOutput(task.output, task.aggregateThreadOutputs, task.dataType);\n        if(task.order) {\n          resolve(sort(output, task.order));\n        } else {\n          resolve(output);\n        }\n        scope.pool.tasks[task.id] = null; //Clean up our task, not needed any longer\n      }\n      if(scope.pool.pending.length !== 0) {\n        scope.processQueue(hamster, scope.pool.pending.shift());\n      } else if(!scope.persistence && !scope.habitat.worker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n\n    // Handle error response from a thread\n    var onThreadError = function(e) {\n      if(!libraryScope.habitat.worker) {\n        hamster.terminate(); //Kill the thread\n      }\n      var error = {\n        timeStamp: Date.now(),\n        threadId: threadId,\n        message: `Error Hamster #${id}: Line ${e.lineno} in ${e.filename}: ${e.message}`\n      };\n      libraryScope.pool.errors.push(error);\n      reject(error);\n    };\n\n    if(this.habitat.worker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }   \n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType || !this.habitat.transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  checkCache(fn, input, dataType) {\n    let cachedResult = this.cache[fn];\n    if(cachedResult) {\n      if(cachedResult[0] === input && cachedResult[2] === dataType) {\n        return cachedResult;\n      }\n    }\n  }\n\n  memoize(fn, inputArray, output, dataType) {\n    this.cache[fn] = [inputArray, output, dataType];\n  }\n\n  sort(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n\n  assignOutput(task, inputArray) {\n    if(!task || !inputArray || !this.habitat.atomics) {\n      return;\n    }\n    task.output = new SharedArrayBuffer(inputArray.length);\n  }\n\n  trackInput(inputArray, thread_id, task, hamsterFood) {\n    task.input.push({ \n      input: inputArray,\n      workerid: thread_id, \n      taskid: task.id, \n      params: hamsterFood, \n      start: Date.now()\n    });\n  }\n\n  trackThread(task, id) {\n    task.startTime = Date.now();\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.pool.running.push(id); //Keep track of all currently running threads\n  }\n\n  poolThread(inputArray, hamsterFood, thread_id, cb, task, agg, memoize) {\n    this.pool.pending.push({\n      memoize: memoize,\n      input: inputArray,\n      params: hamsterFood,\n      workerid: thread_id, \n      onSuccess: cb, \n      task: task,\n      aggregate: agg\n    });\n  }\n\n  legacyProcessor(task, array, resolve, reject) {\n    setTimeout(function() {\n      var rtn = {\n        success: true, \n        data: []\n      };\n      var params = task.params;\n      params.array = array;\n      params.fn();\n      if(params.dataType && params.dataType != \"na\") {\n        rtn.data = this.processDataType(params.dataType, rtn.data);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n\n  getOutput(output, aggregate, dataType) {\n    if(aggregate && output.length <= 20) {\n      return this.aggregateThreadOutputs(output, dataType);\n    }\n    return output;\n  }\n\n  processQueue(hamster, item) {\n    if(!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  chewThread(task, id) {\n    this.pool.running.splice(this.pool.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n  processData(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  processDataType(dataType, buffer) {\n    if(this.habitat.transferrable) {\n      return this.processData(dataType, buffer);\n    }\n    return buffer;\n  }\n\n}\n\nvar hamsters = new hamstersjs();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser(),\n    this.worker = this.isWorker(),\n    this.node = this.isNode(),\n    this.reactNative = this.isReactNative(),\n    this.shell = this.isShell(),\n    this.transferrable = this.supportsTransferrableObjects(),\n    this.legacy = this.isLegacyEnvironment(),\n    this.atomics = this.supportsAtomicOperations(),\n    this.proxies = this.supportsProxies()\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isIE(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWorker();\n  }\n\n  isWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    return (this.isShell() || typeof Worker === 'undefined');\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}