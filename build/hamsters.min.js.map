{"version":3,"sources":["webpack:///webpack/bootstrap b33495c4aad0c5a64f85","webpack:///./src/hamsters.js","webpack:///./src/core/version.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/core/data.js","webpack:///./src/core/pool.js","webpack:///./src/core/wheel.js","webpack:///./src/core/logger.js","webpack:///./src/core/tools.js","webpack:///./src/core/memoizer.js"],"names":["hamstersjs","persistence","memoize","atomics","debug","version","maxThreads","logicalThreads","tools","habitat","data","pool","logger","memoizer","run","runHamsters","promise","hamstersPromise","loop","loopAbstraction","wheel","selectHamsterWheel","init","initializeLibrary","startOptions","info","processStartOptions","spawnHamsters","habitatKeys","key","hasOwnProperty","indexOf","toLowerCase","hamsters","taskOptions","index","tasks","push","input","onSuccess","params","hamstersLoop","options","webWorker","rtn","threads","dataType","threadId","task","resolve","reject","trackThread","dataArray","arrayFromIndex","array","indexes","hamsterWheel","legacy","count","functionToRun","scope","id","length","aggregate","output","workers","operator","prepareJob","determineSubArrays","Promise","hamstersTask","scheduleTask","then","results","catch","error","messsage","running","queueWork","hamsterFood","prepareMeal","hamster","taskhis","grabHamster","worker","trainHamster","feedHamster","getOutput","transferrable","sort","sortOutput","onThreadResponse","message","destroyThread","returnOutput","pending","processQueue","shift","terminate","onThreadError","errorFromThread","port","onmessage","onerror","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","browser","isBrowser","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","isIE","isInternetExplorer","determineGlobalThreads","Worker","locateWorkerObject","sharedWorker","locateSharedWorkerObject","max","navigator","hardwareConcurrency","userAgent","os","cpus","SharedWorker","window","RegExp","isNaN","test","process","importScripts","global","Uint8Array","isIE10","lacksWorkerSupport","legacyAgents","workerBlob","generateBlob","SharedHamster","workerURI","e","SharedArrayBuffer","Proxy","hamstersHabitat","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","createBlob","createDataBlob","generateWorkerBlob","determineSubArrayIndexes","subArrayFromIndex","processDataType","sortArray","prepareOutput","prepareFunction","messageWorker","prepareHamsterFood","fn","postMessage","ie10","prepareTransferBuffers","buffers","buffer","Array","isArray","ArrayBuffer","functionBody","String","startingIndex","endingIndex","substring","workerLogic","functionString","hamsterBlob","URL","createObjectURL","typedArrayFromBuffer","arr","order","prototype","call","a","b","reverse","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","n","i","size","Math","ceil","start","end","slice","subarray","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","round","random","reduce","concat","len","bufferLength","offset","set","threadArrays","hamstersData","addWorkToPending","beginWork","startTask","fetchHamster","markThreadReady","removeThreadFromRunning","keepTrackOfThread","item","promiseResolve","promiseReject","spawnHamster","splice","workerid","regular","hamsterPool","workerScaffold","regularScaffold","legacyScaffold","setDefaults","incomingMessage","addEventListener","incomingConnection","ports","eval","prepareReturn","returnObject","Function","setTimeout","transferable","hamstersWheel","logBook","warning","infoLog","warningLog","errorLog","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","searchLogEntries","searchLogBook","timeStamp","Date","now","timeStampedMessage","console","errorMessage","lineno","filename","eventType","logBookEntries","string","searchResults","searchString","eventTypeResults","tmpEntries","findStringInLogBook","finalResults","allResults","findStringInLogBookAllTypes","all","total","hamstersLogger","parseJson","parseJsonOnThread","stringifyJson","stringifyJsonOnThread","inputAmount","JSON","parse","json","stringify","hamstersTools","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","cacheItem","cachedResult","cache","itemToCache","cachedItems","hamstersMemoizer"],"mappings":"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;;uCAEiB;AAChB,cAAO,OAAOC,KAAP,KAAiB,WAAxB;AACD;;;;;;AAGH,KAAIC,kBAAkB,IAAInJ,OAAJ,EAAtB;;AAEA,KAAG,OAAO+F,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBmD,eAAjB;AACD,E;;;;;;;AC5HD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;;AAEA;;;;;;;;;AASA;;;;;;KAEMlJ,I;AAEJ,mBAAc;AAAA;;AACZ,UAAKmJ,WAAL,GAAmB,KAAKA,WAAxB;AACA,UAAKC,eAAL,GAAuB,KAAKC,sBAA5B;AACA,UAAKC,WAAL,GAAmB,KAAKC,uBAAxB;AACA,UAAKC,UAAL,GAAkB,KAAKC,cAAvB;AACA,UAAKb,YAAL,GAAoB,KAAKc,kBAAzB;AACA,UAAKhG,kBAAL,GAA0B,KAAKiG,wBAA/B;AACA,UAAKhH,cAAL,GAAsB,KAAKiH,iBAA3B;AACA,UAAKC,eAAL,GAAuB,KAAKA,eAA5B;AACA,UAAK7E,UAAL,GAAkB,KAAK8E,SAAvB;AACA,UAAKjF,SAAL,GAAiB,KAAKkF,aAAtB;AACA,UAAKtG,UAAL,GAAkB,KAAKuG,eAAvB;AACA,UAAKpF,WAAL,GAAmB,KAAKqF,aAAxB;AACA,UAAK3F,WAAL,GAAmB,KAAK4F,kBAAxB;AACA,UAAKpB,SAAL,GAAiB,IAAjB;AACD;;;;wCAGkBxG,I,EAAMD,Q,EAAU;AACjC,WAAIgC,cAAc,EAAlB;AACA,YAAK,IAAIlD,GAAT,IAAgBmB,KAAKV,KAArB,EAA4B;AAC1B,aAAIU,KAAKV,KAAL,CAAWR,cAAX,CAA0BD,GAA1B,KAAkCA,QAAQ,OAA9C,EAAuD;AACrDkD,uBAAYlD,GAAZ,IAAmBmB,KAAKV,KAAL,CAAWT,GAAX,CAAnB;AACD;AACF;AACD,WAAImB,KAAKO,OAAL,IAAgBP,KAAKH,OAAL,KAAiB,CAArC,EAAwC;AACtCkC,qBAAYzB,KAAZ,GAAoB,KAAK5C,IAAL,CAAU2C,cAAV,CAAyBL,KAAKV,KAAL,CAAWgB,KAApC,EAA2CN,KAAKO,OAAL,CAAaR,QAAb,CAA3C,CAApB;AACD,QAFD,MAEO;AACLgC,qBAAYzB,KAAZ,GAAoBN,KAAKV,KAAL,CAAWgB,KAA/B;AACD;AACD,WAAIN,KAAKkB,QAAL,IAAiB,CAACa,YAAY8F,EAAlC,EAAsC;AACpC9F,qBAAY8F,EAAZ,GAAiB7H,KAAKkB,QAAtB;AACD;AACD,cAAOa,WAAP;AACD;;;mCAEaE,O,EAASF,W,EAAa;AAClC,WAAI,KAAKtE,OAAL,CAAakC,SAAjB,EAA4B;AAC1B,gBAAOsC,QAAQoB,IAAR,CAAayE,WAAb,CAAyB/F,WAAzB,CAAP;AACD;AACD,WAAI,KAAKtE,OAAL,CAAasK,IAAjB,EAAuB;AACrB,gBAAO9F,QAAQ6F,WAAR,CAAoB/F,WAApB,CAAP;AACD;AACD,cAAOE,QAAQ6F,WAAR,CAAoB/F,WAApB,EAAiC,KAAKiG,sBAAL,CAA4BjG,WAA5B,CAAjC,CAAP;AACD;;;4CAEsBA,W,EAAa;AAClC,WAAIkG,UAAU,EAAd;AACA,WAAIpJ,MAAM,IAAV;AACA,WAAG,KAAKpB,OAAL,CAAa+E,aAAhB,EAA+B;AAC7B,cAAK3D,GAAL,IAAYkD,WAAZ,EAAyB;AACvB,eAAIA,YAAYjD,cAAZ,CAA2BD,GAA3B,KAAmCkD,YAAYlD,GAAZ,CAAvC,EAAyD;AACvD,iBAAGkD,YAAYlD,GAAZ,EAAiBqJ,MAApB,EAA4B;AAC1BD,uBAAQ5I,IAAR,CAAa0C,YAAYlD,GAAZ,EAAiBqJ,MAA9B;AACD,cAFD,MAEO,IAAGC,MAAMC,OAAN,CAAcrG,YAAYlD,GAAZ,CAAd,KAAmC,OAAOwJ,WAAP,KAAuB,WAA7D,EAA0E;AAC/EJ,uBAAQ5I,IAAR,CAAa,IAAIgJ,WAAJ,CAAgBtG,YAAYlD,GAAZ,CAAhB,CAAb;AACD;AACF;AACF;AACF;AACD,cAAOoJ,OAAP;AACD;;;qCAGeK,Y,EAAc;AAC5B,WAAI,CAAC,KAAK7K,OAAL,CAAagD,MAAlB,EAA0B;AACxB6H,wBAAeC,OAAOD,YAAP,CAAf;AACA,aAAI,CAAC,KAAK7K,OAAL,CAAakC,SAAlB,EAA6B;AAC3B,eAAI6I,gBAAiBF,aAAavJ,OAAb,CAAqB,GAArB,IAA4B,CAAjD;AACA,eAAI0J,cAAeH,aAAaxH,MAAb,GAAsB,CAAzC;AACA,kBAAOwH,aAAaI,SAAb,CAAuBF,aAAvB,EAAsCC,WAAtC,CAAP;AACD;AACF;AACD,cAAOH,YAAP;AACD;;;wCAEkBK,W,EAAa;AAC9B,WAAIC,iBAAiB,MAAML,OAAOI,WAAP,CAAN,GAA4B,MAAjD;AACA,WAAIE,cAAc,KAAK3B,UAAL,CAAgB0B,cAAhB,CAAlB;AACA,cAAOE,IAAIC,eAAJ,CAAoBF,WAApB,CAAP;AACD;;;qCAEe/I,Q,EAAUoI,M,EAAQ1F,a,EAAe;AAC/C,WAAGA,aAAH,EAAkB;AAChB,gBAAO,KAAKwG,oBAAL,CAA0BlJ,QAA1B,EAAoCoI,MAApC,CAAP;AACD;AACD,cAAOA,MAAP;AACD;;;mCAEalI,I,EAAMwC,a,EAAe;AACjC,WAAGxC,KAAKe,SAAL,IAAkBf,KAAKH,OAAL,KAAiB,CAAtC,EAAyC;AACvC,gBAAO,KAAKkH,sBAAL,CAA4B/G,KAAKgB,MAAjC,EAAyChB,KAAKF,QAA9C,EAAwD0C,aAAxD,CAAP;AACD;AACD,cAAOxC,KAAKgB,MAAZ;AACD;;;+BAESiI,G,EAAKC,K,EAAO;AACpB,eAAOA,KAAP;AACE,cAAK,MAAL;AACA,cAAK,KAAL;AACE,kBAAOf,MAAMgB,SAAN,CAAgB1G,IAAhB,CAAqB2G,IAArB,CAA0BH,GAA1B,EAA+B,UAASI,CAAT,EAAYC,CAAZ,EAAe;AACnD,oBAAQJ,UAAU,KAAV,GAAmBG,IAAIC,CAAvB,GAA6BA,IAAID,CAAzC;AACD,YAFM,CAAP;AAGF,cAAK,UAAL;AACE,kBAAOJ,IAAIxG,IAAJ,EAAP;AACF,cAAK,WAAL;AACE,kBAAOwG,IAAIM,OAAJ,EAAP;AACF;AACE,kBAAON,GAAP;AAXJ;AAaD;;;0CAEoBnJ,Q,EAAUoI,M,EAAQ;AACrC,WAAMsB,QAAQ;AACZ,mBAAUC,WADE;AAEZ,mBAAUC,WAFE;AAGZ,kBAASzD,UAHG;AAIZ,yBAAgB0D,iBAJJ;AAKZ,kBAASC,UALG;AAMZ,kBAASC,UANG;AAOZ,iBAAQC,SAPI;AAQZ,oBAAWC,YARC;AASZ,oBAAWC;AATC,QAAd;AAWA,WAAG,CAACR,MAAM1J,QAAN,CAAJ,EAAqB;AACnB,gBAAOA,QAAP;AACD;AACD,cAAO,IAAI0J,MAAM1J,QAAN,CAAJ,CAAoBoI,MAApB,CAAP;AACD;;;8CAEwB5H,K,EAAO2J,C,EAAG;AACjC,WAAIC,IAAI,CAAR;AACA,WAAIC,OAAOC,KAAKC,IAAL,CAAU/J,MAAMQ,MAAN,GAAamJ,CAAvB,CAAX;AACA,WAAI1J,UAAU,EAAd;AACA,cAAM2J,IAAI5J,MAAMQ,MAAhB,EAAwB;AACtB,aAAIwJ,QAAQJ,CAAZ;AACA,aAAIK,MAAQL,IAAIC,IAAL,GAAa,CAAxB;AACA5J,iBAAQlB,IAAR,CAAa;AACXiL,kBAAOA,KADI;AAEXC,gBAAKA;AAFM,UAAb;AAICL,cAAKC,IAAN;AACD;AACD,cAAO5J,OAAP;AACD;;;uCAEiBD,K,EAAOnB,K,EAAO;AAC9B,WAAGmB,MAAMkK,KAAT,EAAgB;AACd,gBAAOlK,MAAMkK,KAAN,CAAYrL,MAAMmL,KAAlB,EAAyBnL,MAAMoL,GAA/B,CAAP;AACD,QAFD,MAEO;AACL,gBAAOjK,MAAMmK,QAAN,CAAetL,MAAMmL,KAArB,EAA4BnL,MAAMoL,GAAlC,CAAP;AACD;AACF;;;oCAEcG,W,EAAa;AAC1B,WAAG,OAAOC,IAAP,KAAgB,WAAnB,EAAgC;AAC9B,aAAIC,YAAaC,eAAeC,iBAAf,IAAoCC,cAApC,IAAsDC,aAAvE;AACA,aAAIC,OAAO,IAAIL,SAAJ,EAAX;AACAK,cAAKC,MAAL,CAAY,CAACR,WAAD,CAAZ,EAA2B;AACzBS,iBAAM;AADmB,UAA3B;AAGA,gBAAOF,KAAKG,OAAL,EAAP;AACD;AACD,cAAO,IAAIT,IAAJ,CAAS,CAACD,WAAD,CAAT,EAAwB;AAC7BS,eAAM;AADuB,QAAxB,CAAP;AAGD;;;iCAEWzK,K,EAAOnB,S,EAAW;AAC5B,WAAIsH,cAAc,EAAlB;AACA,cAAMnG,QAAQ,CAAd,EAAiB;AACfmG,qBAAYxH,IAAZ,CAAiB+K,KAAKiB,KAAL,CAAWjB,KAAKkB,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAjB;AACA5K,kBAAS,CAAT;AACD;AACDnB,iBAAUsH,WAAV;AACD;;;4CAEsBvH,K,EAAOQ,Q,EAAU0C,a,EAAe;AACrD,WAAG,CAAC1C,QAAD,IAAa,CAAC0C,aAAjB,EAAgC;AAC9B,gBAAOlD,MAAMiM,MAAN,CAAa,UAASlC,CAAT,EAAYC,CAAZ,EAAe;AACjC,kBAAOD,EAAEmC,MAAF,CAASlC,CAAT,CAAP;AACD,UAFM,CAAP;AAGD;AACD,WAAIY,IAAI,CAAR;AACA,WAAIuB,MAAMnM,MAAMwB,MAAhB;AACA,WAAI4K,eAAe,CAAnB;AACA,YAAKxB,CAAL,EAAQA,IAAIuB,GAAZ,EAAiBvB,KAAK,CAAtB,EAAyB;AACvBwB,yBAAgBpM,MAAM4K,CAAN,EAASpJ,MAAzB;AACD;AACD,WAAIE,SAAS,KAAKuG,eAAL,CAAqBzH,QAArB,EAA+B4L,YAA/B,EAA6ClJ,aAA7C,CAAb;AACA,WAAImJ,SAAS,CAAb;AACA,YAAKzB,IAAI,CAAT,EAAYA,IAAIuB,GAAhB,EAAqBvB,KAAK,CAA1B,EAA6B;AAC3BlJ,gBAAO4K,GAAP,CAAWtM,MAAM4K,CAAN,CAAX,EAAqByB,MAArB;AACAA,mBAAUrM,MAAM4K,CAAN,EAASpJ,MAAnB;AACD;AACD,cAAOE,MAAP;AACD;;;6CAEuBV,K,EAAO2J,C,EAAG;AAChC,WAAIC,IAAI,CAAR;AACA,WAAI2B,eAAe,EAAnB;AACA,WAAI1B,OAAOC,KAAKC,IAAL,CAAU/J,MAAMQ,MAAN,GAAamJ,CAAvB,CAAX;AACA,WAAG3J,MAAMkK,KAAT,EAAgB;AACd,gBAAMN,IAAI5J,MAAMQ,MAAhB,EAAwB;AACtB+K,wBAAaxM,IAAb,CAAkBiB,MAAMkK,KAAN,CAAYN,CAAZ,EAAeA,KAAKC,IAApB,CAAlB;AACD;AACF,QAJD,MAIO;AACL,gBAAOD,IAAI5J,MAAMQ,MAAjB,EAAyB;AACvB+K,wBAAaxM,IAAb,CAAkBiB,MAAMmK,QAAN,CAAeP,CAAf,EAAkBA,KAAKC,IAAvB,CAAlB;AACD;AACF;AACD,cAAO0B,YAAP;AACD;;;;;;AAIH,KAAIC,eAAe,IAAIpO,IAAJ,EAAnB;;AAEA,KAAG,OAAO8F,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBqI,YAAjB;AACD,E;;;;;;;;sjBC3OD;;AAEA;;;;;;;;;AASA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;;KAEMnO,I;AACJ,mBAAc;AAAA;;AACZ,UAAKyB,KAAL,GAAa,EAAb;AACD,UAAKS,OAAL,GAAe,EAAf;AACC,UAAKgC,OAAL,GAAe,EAAf;AACA,UAAKkB,OAAL,GAAe,EAAf;AACA,UAAKjB,SAAL,GAAiB,KAAKiK,gBAAtB;AACA,UAAKC,SAAL,GAAiB,KAAKC,SAAtB;AACA,UAAKC,YAAL,GAAoB,KAAK/J,WAAzB;AACA,UAAK9D,kBAAL,GAA0B,KAAKA,kBAA/B;AACA,UAAK8N,eAAL,GAAuB,KAAKC,uBAA5B;AACA,UAAKjM,WAAL,GAAmB,KAAKkM,iBAAxB;AACD;;;;sCAEgBrM,I,EAAMa,E,EAAIZ,O,EAASC,M,EAAQ;AAC3C,YAAK6C,OAAL,CAAa1D,IAAb,CAAkB;AACjBiN,eAAMtM,IADW;AAEjBD,mBAAUc,EAFO;AAGjB0L,yBAAgBtM,OAHC;AAIjBuM,wBAAetM;AAJE,QAAlB;AAMA;;;iCAEWH,Q,EAAU9C,W,EAAamF,M,EAAQ;AACzC,WAAGnF,WAAH,EAAgB;AACd,gBAAO,KAAK4C,OAAL,CAAaE,QAAb,CAAP;AACD;AACD,cAAO,KAAK0M,YAAL,oBAAmCrK,MAAnC,EAA2C,eAAaoE,SAAxD,CAAP;AACD;;;6BAEOtH,W,EAAa;AACnB,WAAIC,QAAQ,KAAKxB,IAAL,CAAUyB,KAAV,CAAgBC,IAAhB,CAAqBH,WAArB,CAAZ;AACA,cAAO,KAAKvB,IAAL,CAAUyB,KAAV,CAAiBD,QAAQ,CAAzB,CAAP;AACD;;;6CAEuBa,I,EAAMa,E,EAAI;AAChC,YAAKgB,OAAL,CAAa6K,MAAb,CAAoB,KAAK7K,OAAL,CAAa9C,OAAb,CAAqB8B,EAArB,CAApB,EAA8C,CAA9C,EADgC,CACkB;AAClDb,YAAKiB,OAAL,CAAayL,MAAb,CAAoB1M,KAAKiB,OAAL,CAAalC,OAAb,CAAqB8B,EAArB,CAApB,EAA8C,CAA9C,EAFgC,CAEkB;AACnD;;;kCAEYoB,O,EAASqK,I,EAAM;AAC1B,WAAI,CAACA,IAAL,EAAW;AACT;AACD;AACD,YAAKlO,KAAL,CAAWkO,KAAKhN,KAAhB,EAAuBgN,KAAK9M,MAA5B,EAAoC8M,KAAKvL,SAAzC,EAAoDuL,KAAK/M,SAAzD,EAAoE+M,KAAKtM,IAAzE,EAA+EsM,KAAKK,QAApF,EAA8F1K,OAA9F,EAAuGqK,KAAKpP,OAA5G,EAJ0B,CAI4F;AACvH;;;+BAES8C,I,EAAMC,O,EAASC,M,EAAQ;AAC/B,cAAO,KAAK9B,KAAL,CAAW4B,IAAX,EAAiBC,OAAjB,EAA0BC,MAA1B,CAAP;AACD;;;mCAEajD,W,EAAamB,K,EAAOd,U,EAAY;AAC7C,WAAIkJ,YAAY,IAAhB;AACC,WAAG,kBAAgB/F,MAAnB,EAA2B;AACzB;AACD;AACD,WAAG,kBAAgBqD,OAAnB,EAA4B;AAC1B0C,qBAAY,eAAaF,YAAb,CAA0BlI,KAA1B,CAAZ;AACD;AACD,WAAInB,WAAJ,EAAiB;AACf,0BAAewB,IAAf,CAAuBnB,UAAvB,4CAAwEA,UAAxE;AACA,cAAKA,UAAL,EAAiBA,aAAa,CAA9B,EAAiCA,YAAjC,EAA+C;AAC7C,gBAAKuC,OAAL,CAAaR,IAAb,CAAkB,KAAKoN,YAAL,CAAkBrO,KAAlB,EAAyBoI,SAAzB,CAAlB;AACD;AACD,0BAAe/H,IAAf,CAAuB,KAAKoB,OAAL,CAAaiB,MAApC;AACD;AACF;;;kCAEY1C,K,EAAOoI,S,EAAW;AAC7B,WAAI,kBAAgBuB,IAApB,EAA0B;AACxB,gBAAO,IAAI,kBAAgBhD,MAApB,CAA2B3G,KAA3B,CAAP;AACD;AACD,WAAI,kBAAgBuB,SAApB,EAA+B;AAC7B,gBAAO,IAAI,kBAAgB8F,YAApB,CAAiCe,SAAjC,EAA4C,oBAA5C,CAAP;AACD;AACD,WAAI,CAAC,kBAAgBvC,IAAhB,IAAwB,kBAAgBE,WAAzC,KAAyD,CAAC,kBAAgBL,OAA9E,EAAuF;AACrF,gBAAO,IAAI,kBAAgBiB,MAApB,CAA2B3G,KAA3B,CAAP;AACD;AACD,cAAO,IAAI,kBAAgB2G,MAApB,CAA2ByB,SAA3B,CAAP;AACD;;;0CAEoB;AACnB,WAAI,kBAAgB/F,MAApB,EAA4B;AAC1B,gBAAO,gBAAcA,MAArB;AACD;AACD,WAAG,kBAAgBd,SAAnB,EAA8B;AAC5B,gBAAO,gBAAcyC,MAArB;AACD;AACD,cAAO,gBAAcwK,OAArB;AACD;;;kCAEY5M,I,EAAM5B,K,EAAOd,U,EAAY;AACrC,WAAG,KAAKuE,OAAL,CAAaf,MAAb,KAAwBxD,UAA3B,EAAuC;AACtC,gBAAO,KAAKyO,gBAAL,EAAP;AACA;AACD,cAAO,IAAI1K,OAAJ,CAAY,UAACpB,OAAD,EAAUC,MAAV,EAAqB;AACrC,aAAIgK,IAAI,CAAR;AACA,gBAAOA,IAAIlK,KAAKH,OAAhB,EAAyB;AACvBzB,iBAAM4B,IAAN,EAAYC,OAAZ,EAAqBC,MAArB;AACAgK,gBAAK,CAAL;AACD;AACF,QANK,CAAP;AAOA;;;uCAEiBlK,I,EAAMa,E,EAAI;AAC1Bb,YAAKiB,OAAL,CAAa5B,IAAb,CAAkBwB,EAAlB,EAD0B,CACH;AACvB,YAAKgB,OAAL,CAAaxC,IAAb,CAAkBwB,EAAlB,EAF0B,CAEH;AACxB;;;;;;AAGH,KAAIgM,cAAc,IAAIlP,IAAJ,EAAlB;;AAEA,KAAG,OAAO6F,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBoJ,WAAjB;AACD,E;;;;;;;;sjBCpID;;AAEA;;;;;;;;;AASA;;;;AACA;;;;;;;;AAEA;;KAEMzO,K;AAEJ,oBAAc;AAAA;;AACZ,UAAKgE,MAAL,GAAc,KAAK0K,cAAnB;AACA,UAAKF,OAAL,GAAe,KAAKG,eAApB;AACA,UAAKtM,MAAL,GAAc,KAAKuM,cAAnB;AACD;;;;sCAEgB;AACf;;AAEA,WAAIxN,SAAS,EAAb;AACA,WAAII,MAAM,EAAV;;AAEA,gBAASqN,WAAT,CAAqBC,eAArB,EAAsC;AACpC1N,kBAAS0N,gBAAgBxP,IAAzB;AACAkC,eAAM;AACJlC,iBAAM,EADF;AAEJoC,qBAAUN,OAAOM;AAFb,UAAN;AAID;;AAEDqN,wBAAiB,SAAjB,EAA4B,UAASC,kBAAT,EAA6B;AACvD,aAAM/J,OAAO+J,mBAAmBC,KAAnB,CAAyB,CAAzB,CAAb;AACAhK,cAAKiH,KAAL;AACAjH,cAAK8J,gBAAL,CAAsB,SAAtB,EAAiC,UAASD,eAAT,EAA0B;AACzDD,uBAAYC,eAAZ;AACAI,gBAAK,MAAM9N,OAAOqI,EAAb,GAAkB,GAAvB;AACAxE,gBAAKyE,WAAL,CAAiB;AACfrG,sBAAS7B;AADM,YAAjB;AAGD,UAND,EAMG,KANH;AAOD,QAVD,EAUG,KAVH;AAWD;;;uCAEiB;AAChB;;AAEA,WAAIJ,SAAS,EAAb;AACA,WAAII,MAAM,EAAV;;AAEA,gBAASqN,WAAT,CAAqBC,eAArB,EAAsC;AACpC1N,kBAAS0N,gBAAgBxP,IAAzB;AACAkC,eAAM;AACJlC,iBAAM,EADF;AAEJoC,qBAAWN,OAAOM,QAAP,GAAkBN,OAAOM,QAAP,CAAgBd,WAAhB,EAAlB,GAAkD;AAFzD,UAAN;AAID;;AAED,gBAASuO,aAAT,CAAuBC,YAAvB,EAAqC;AACnC,aAAI1N,WAAW0N,aAAa1N,QAA5B;AACA,aAAGA,QAAH,EAAa;AACX0N,wBAAa9P,IAAb,GAAoBsL,qBAAqBlJ,QAArB,EAA+B0N,aAAa9P,IAA5C,CAApB;AACD;AACD,gBAAO8P,YAAP;AACD;;AAED,gBAASxE,oBAAT,CAA8BlJ,QAA9B,EAAwCoI,MAAxC,EAAgD;AAC9C,aAAMsB,QAAQ;AACZ,qBAAUC,WADE;AAEZ,qBAAUC,WAFE;AAGZ,oBAASzD,UAHG;AAIZ,2BAAgB0D,iBAJJ;AAKZ,oBAASC,UALG;AAMZ,oBAASC,UANG;AAOZ,mBAAQC,SAPI;AAQZ,sBAAWC,YARC;AASZ,sBAAWC;AATC,UAAd;AAWA,aAAI,CAACR,MAAM1J,QAAN,CAAL,EAAsB;AACpB,kBAAOoI,MAAP;AACD;AACD,gBAAO,IAAIsB,MAAM1J,QAAN,CAAJ,CAAoBoI,MAApB,CAAP;AACD;;AAED,gBAASF,sBAAT,CAAgCjG,WAAhC,EAA6C;AAC3C,aAAIkG,UAAU,EAAd;AACA,aAAIpJ,MAAM,IAAV;AACA,cAAKA,GAAL,IAAYkD,WAAZ,EAAyB;AACvB,eAAIA,YAAYjD,cAAZ,CAA2BD,GAA3B,KAAmCkD,YAAYlD,GAAZ,CAAvC,EAAyD;AACvD,iBAAGkD,YAAYlD,GAAZ,EAAiBqJ,MAApB,EAA4B;AAC1BD,uBAAQ5I,IAAR,CAAa0C,YAAYlD,GAAZ,EAAiBqJ,MAA9B;AACD,cAFD,MAEO,IAAGC,MAAMC,OAAN,CAAcrG,YAAYlD,GAAZ,CAAd,KAAmC,OAAOwJ,WAAP,KAAuB,WAA7D,EAA0E;AAC/EJ,uBAAQ5I,IAAR,CAAa,IAAIgJ,WAAJ,CAAgBtG,YAAYlD,GAAZ,CAAhB,CAAb;AACD;AACF;AACF;AACD,gBAAOoJ,OAAP;AACD;;AAED,gBAAS3E,SAAT,CAAmB4J,eAAnB,EAAoC;AAClCD,qBAAYC,eAAZ;AACA,aAAIO,QAAJ,CAAajO,OAAOqI,EAApB;AACAC,qBAAYyF,cAAc3N,GAAd,CAAZ,EAAgCoI,uBAAuBpI,GAAvB,CAAhC;AACD;AACF;;;oCAEcJ,M,EAAQS,O,EAASC,M,EAAQ;AACtCwN,kBAAW,YAAW;AACpB,aAAI9N,MAAM;AACRlC,iBAAM,EADE;AAERoC,qBAAWN,OAAOM,QAAP,GAAkBN,OAAOM,QAAP,CAAgBd,WAAhB,EAAlB,GAAkD;AAFrD,UAAV;AAIAQ,gBAAOqI,EAAP;AACA,aAAIrI,OAAOM,QAAX,EAAqB;AACnBF,eAAIlC,IAAJ,GAAW,eAAa6J,eAAb,CAA6B/H,OAAOM,QAApC,EAA8CF,IAAIlC,IAAlD,EAAwD,kBAAgBiQ,YAAxE,CAAX;AACA/N,eAAIE,QAAJ,GAAeN,OAAOM,QAAtB;AACD;AACDG,iBAAQL,GAAR;AACD,QAXD,EAWG,CAXH,EADsC,CAY/B;AACR;;;;;;AACF;;AAED,KAAIgO,gBAAgB,IAAIxP,KAAJ,EAApB;;AAEA,KAAG,OAAOoF,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBmK,aAAjB;AACD,E;;;;;;;;sjBCrID;;AAEA;;;;;;;;;AASA;;;;;;;;AAEA;;KAEMhQ,M;AACJ,qBAAc;AAAA;;AACZ,UAAKiQ,OAAL,GAAe;AACblM,cAAO,EADM;AAEbmM,gBAAS,EAFI;AAGbrP,aAAM;AAHO,MAAf;AAKA,UAAKA,IAAL,GAAY,KAAKsP,OAAjB;AACA,UAAKD,OAAL,GAAe,KAAKE,UAApB;AACA,UAAKrM,KAAL,GAAa,KAAKsM,QAAlB;AACA,UAAK7K,eAAL,GAAuB,KAAKA,eAA5B;AACA,UAAK8K,YAAL,GAAoB,KAAKC,aAAzB;AACA,UAAKC,aAAL,GAAqB,KAAKC,YAA1B;AACA,UAAKC,gBAAL,GAAwB,KAAKC,aAA7B;AACD;;;;6BAEO3L,O,EAAS;AACf,WAAI4L,YAAYC,KAAKC,GAAL,EAAhB;AACA,WAAIC,uEAA8D/L,OAA9D,WAA2E4L,SAA/E;AACA,YAAKN,YAAL,CAAkB,MAAlB,EAA0BS,kBAA1B;AACAC,eAAQnQ,IAAR,CAAakQ,kBAAb;AACD;;;gCAEU/L,O,EAAS;AAClB,WAAI4L,YAAYC,KAAKC,GAAL,EAAhB;AACA,WAAIC,0EAAiE/L,OAAjE,WAA8E4L,SAAlF;AACA,YAAKN,YAAL,CAAkB,SAAlB,EAA6BS,kBAA7B;AACAC,eAAQd,OAAR,CAAgBa,kBAAhB;AACD;;;8BAEQ/L,O,EAAS1C,M,EAAQ;AACxB,WAAIsO,YAAYC,KAAKC,GAAL,EAAhB;AACA,WAAIC,wEAA+D/L,OAA/D,WAA4E4L,SAAhF;AACA,YAAKN,YAAL,CAAkB,OAAlB,EAA2BS,kBAA3B;AACAC,eAAQjN,KAAR,CAAcgN,kBAAd;AACAzO,cAAOyO,kBAAP;AACD;;;qCAEehN,K,EAAOzB,M,EAAQ;AAC7B,WAAI2O,qBAAmBlN,MAAMmN,MAAzB,YAAsCnN,MAAMoN,QAA5C,UAAyDpN,MAAMiB,OAAnE;AACA,YAAKqL,QAAL,CAAcY,YAAd,EAA4B3O,MAA5B;AACD;;;mCAEa8O,S,EAAWpM,O,EAAS;AAChC,YAAKiL,OAAL,CAAamB,SAAb,EAAwB3P,IAAxB,CAA6BuD,OAA7B;AACD;;;kCAEYoM,S,EAAW;AACtB,WAAGA,SAAH,EAAc;AACZ,gBAAO,KAAKnB,OAAL,CAAamB,SAAb,CAAP;AACD;AACD,cAAO,KAAKnB,OAAZ;AACD;;;yCAEmBoB,c,EAAgBC,M,EAAQ;AAC1C,WAAIC,gBAAgB,EAApB;AACA,WAAIjF,IAAI,CAAR;AACA,YAAKA,CAAL,EAAQA,IAAI+E,eAAenO,MAA3B,EAAmCoJ,GAAnC,EAAwC;AACtC,aAAG+E,eAAe/E,CAAf,EAAkBnL,OAAlB,CAA0BmQ,MAA1B,MAAsC,CAAC,CAA1C,EAA6C;AAC3CC,yBAAc9P,IAAd,CAAmB4P,eAAe/E,CAAf,CAAnB;AACD;AACF;AACD,cAAOiF,aAAP;AACD;;;iDAE2BtB,O,EAASuB,Y,EAAc;AACjD,WAAID,gBAAgB,EAApB;AACA,WAAItQ,YAAJ;AAAA,WAASwQ,yBAAT;AAAA,WAA2BC,aAAa,IAAxC;AACA,YAAIzQ,GAAJ,IAAWgP,OAAX,EAAoB;AAClB,aAAGA,QAAQ/O,cAAR,CAAuBD,GAAvB,CAAH,EAAgC;AAC9ByQ,wBAAazB,QAAQhP,GAAR,CAAb;AACAwQ,8BAAmB,KAAKE,mBAAL,CAAyBD,UAAzB,EAAqCF,YAArC,CAAnB;AACD;AACF;AACD,cAAOD,aAAP;AACD;;;mCAEaC,Y,EAAcJ,S,EAAW;AACrC,WAAIQ,eAAe,EAAnB;AACA,WAAIH,yBAAJ;AACA,WAAGL,SAAH,EAAc;AACZM,sBAAa,KAAKzB,OAAL,CAAamB,SAAb,CAAb;AACAQ,wBAAe,KAAKD,mBAAL,CAAyBD,UAAzB,EAAqCJ,MAArC,CAAf;AACD,QAHD,MAGO;AACL,aAAIO,aAAa,KAAKC,2BAAL,CAAiC,KAAK7B,OAAtC,CAAjB;AACA,aAAG8B,IAAI7O,MAAJ,KAAe,CAAlB,EAAqB;AACnB0O,0BAAe,CAACA,YAAD,EAAeH,gBAAf,EAAiC9D,MAAjC,CAAwC,UAASlC,CAAT,EAAYC,CAAZ,EAAe;AACpE,oBAAOD,EAAEmC,MAAF,CAASlC,CAAT,CAAP;AACD,YAFc,CAAf;AAGD;AACF;AACD,cAAO;AACLsG,gBAAOJ,aAAa1O,MADf;AAELW,kBAAS+N;AAFJ,QAAP;AAID;;;;;;AAGH,KAAIK,iBAAiB,IAAIjS,MAAJ,EAArB;;AAEA,KAAG,OAAO4F,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBoM,cAAjB;AACD,E;;;;;;ACrHD;;AAEA;;;;;;;;;AASA;;;;;;KAEMrS,K;AACJ,oBAAc;AAAA;;AACZ,UAAKqJ,WAAL,GAAmB,KAAKA,WAAxB;AACA,UAAKiJ,SAAL,GAAiB,KAAKC,iBAAtB;AACA,UAAKC,aAAL,GAAqB,KAAKC,qBAA1B;AACD;;;;iCAEWC,W,EAAa3Q,S,EAAW;AAClC,WAAIe,QAAQ,EAAZ;AACA,cAAM4P,cAAc,CAApB,EAAuB;AACrB5P,eAAM4P,WAAN,IAAqB9F,KAAKiB,KAAL,CAAWjB,KAAKkB,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAArB;AACA4E,wBAAe,CAAf;AACD;AACD3Q,iBAAUe,KAAV;AACD;;;uCAEiB4O,M,EAAQ3P,S,EAAW;AACnC,YAAKxB,WAAL,CAAiB,EAACuB,OAAO4P,MAAR,EAAjB,EAAkC,YAAW;AAC3CtP,aAAIlC,IAAJ,GAAWyS,KAAKC,KAAL,CAAW5Q,OAAOF,KAAlB,CAAX;AACD,QAFD,EAEG,UAAS0B,MAAT,EAAiB;AAClBzB,mBAAUyB,OAAO,CAAP,CAAV;AACD,QAJD,EAIG,CAJH;AAKD;;;2CAEqBqP,I,EAAM9Q,S,EAAW;AACrC,YAAKxB,WAAL,CAAiB,EAACuB,OAAO+Q,IAAR,EAAjB,EAAgC,YAAW;AACzCzQ,aAAIlC,IAAJ,GAAWyS,KAAKG,SAAL,CAAe9Q,OAAOF,KAAtB,CAAX;AACD,QAFD,EAEG,UAAS0B,MAAT,EAAiB;AAClBzB,mBAAUyB,OAAO,CAAP,CAAV;AACD,QAJD,EAIG,CAJH;AAKD;;;;;;AAGH,KAAIuP,gBAAgB,IAAI/S,KAAJ,EAApB;;AAEA,KAAG,OAAOgG,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiB8M,aAAjB;AACD,E;;;;;;AClDD;;AAEA;;;;;;;;;AASA;;;;;;KAEM1S,Q;AACJ,uBAAc;AAAA;;AACZ,UAAK2S,eAAL,GAAuB,EAAvB;AACA,UAAKC,YAAL,GAAoB,EAApB;AACA,UAAKC,UAAL,GAAkB,KAAKC,YAAvB;AACA,UAAKC,SAAL,GAAiB,KAAKC,kBAAtB;AACA,UAAKC,QAAL,GAAgB,KAAKC,eAArB;AACD;;;;kCAEYzR,K,EAAO0R,M,EAAQ;AAC3B,cAAO,CAAC,CAAE,KAAKJ,SAAL,CAAe,EAAC/I,IAAImJ,MAAL,EAAatT,MAAM4B,KAAnB,EAAf,CAAH,IAAiD,KAAxD;AACA;;;wCAEkB2R,S,EAAW;AAC7B,WAAIC,eAAe,IAAnB;AACA,YAAI,IAAIrS,GAAR,IAAe,KAAKsS,KAApB,EAA2B;AAC1B,aAAG,KAAKA,KAAL,CAAWrS,cAAX,CAA0BD,GAA1B,CAAH,EAAmC;AAClC,eAAGoS,UAAUpS,GAAV,EAAegJ,EAAf,KAAsBoJ,UAAUpJ,EAAnC,EAAuC;AACtC,iBAAGoJ,UAAUpS,GAAV,EAAeS,KAAf,KAAyB2R,UAAUvT,IAAtC,EAA4C;AAC3CwT,8BAAeD,UAAUpS,GAAV,EAAeS,KAA9B;AACA;AACD;AACD;AACD;AACD,cAAO4R,gBAAgB,KAAvB;AACA;;;qCAEeF,M,EAAQtT,I,EAAM8S,e,EAAiB;AAC9C,WAAIY,cAAc;AACjBvJ,aAAImJ,MADa;AAEjB1R,gBAAO5B;AAFU,QAAlB;AAIA,WAAI2T,cAAc,KAAKZ,YAAvB;AACA,WAAGY,YAAYvQ,MAAZ,GAAqB0P,eAAxB,EAAyC;AACxCa,qBAAYhS,IAAZ,CAAiB+R,WAAjB;AACA,QAFD,MAEO;AACNC,qBAAY3E,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB0E,WAAzB;AACA;AACD,YAAKX,YAAL,GAAoBY,WAApB;AACA;;;;;;AAGH,KAAIC,mBAAmB,IAAIzT,QAAJ,EAAvB;;AAEA,KAAG,OAAO2F,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiB6N,gBAAjB;AACD,E","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b33495c4aad0c5a64f85","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n * Title: Hamsters.js\n * Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library\n * Author: Austin K. Smith\n * Contact: austin@asmithdev.com\n * Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n * License: Artistic License 2.0\n */\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersWheel from './core/wheel';\nimport hamstersTools from './core/tools';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  constructor() {\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.debug = false;\n    this.version = hamstersVersion;\n    this.maxThreads = hamstersHabitat.logicalThreads;\n    this.tools = hamstersTools;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.run = this.runHamsters;\n    this.promise = this.hamstersPromise;\n    this.loop = this.loopAbstraction;\n    this.wheel = hamstersPool.selectHamsterWheel();\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    this.logger.info(`Preparing the hamster wheels & readying hamsters`);\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    this.pool.spawnHamsters(this.persistence, this.wheel, this.maxThreads);\n  }\n\n  processStartOptions(startOptions) {\n    let habitatKeys = ['worker', 'sharedWorker', 'legacy'];\n    for (var key in startOptions) {\n      if (startOptions.hasOwnProperty(key)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          hamsters.habitat[key] = startOptions[key];\n        } else {\n          hamsters[key] = startOptions[key];\n        }\n      }\n    }\n  }\n\n  newTask(taskOptions) {\n    let index = this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[(index - 1)];\n  }\n\n  loopAbstraction(input, onSuccess) {\n    let params = new hamstersLoop.options(input, this.habitat.webWorker);\n    this.runHamsters(params, function(rtn) {\n      onSuccess(rtn);\n    }, input.threads, true, input.dataType);\n  }\n\n  legacyHamsterWheel(threadId, task, resolve, reject) {\n    this.pool.trackThread(task, threadId);\n    let dataArray = this.data.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    hamsterWheel.legacy(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  hamstersTask(params, functionToRun, scope) {\n    this.id = scope.pool.tasks.length;\n    this.threads = params.threads || 1;\n    this.count = 0;\n    this.input = params;\n    this.aggregate = params.aggregate || true;\n    this.output = [];\n    this.workers = [];\n    this.operator = scope.data.prepareJob(functionToRun);\n    this.memoize = params.memoize || false;\n    this.dataType = params.dataType ? params.dataType.toLowerCase() : null;\n    if(params.array) {\n      this.indexes = scope.data.determineSubArrays(params.array, this.threads);\n    }\n  }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      var task = new this.hamstersTask(params, functionToRun, this);\n      var logger = this.logger;\n      this.pool.scheduleTask(task, this.wheel, this.maxThreads).then(function(results) {\n        resolve(results);\n      }).catch(function(error) {\n        logger.error(error.messsage, reject);\n      });\n    });\n  }\n\n  runHamsters(params, functionToRun, onSuccess) {\n    var task = new this.hamstersTask(params, functionToRun, this);\n    var logger = this.logger;\n    this.pool.scheduleTask(task, this.wheel, this.maxThreads).then(function(results) {\n      onSuccess(results);\n    }).catch(function(error) {\n      logger.error(error.messsage);\n    });\n  }\n\n  hamsterWheel(task, resolve, reject) {\n    let threadId = this.pool.running.length;\n    if(this.maxThreads === threadId) {\n      return this.pool.queueWork(task, threadId, resolve, reject);\n    }\n    let hamsterFood = this.data.prepareMeal(task, threadId);\n    let hamster = taskhis.pool.grabHamster(threadId, this.persistence, this.habitat, this.worker, this.data);\n    this.trainHamster(threadId, task, hamster, resolve, reject);\n    this.pool.trackThread(task, threadId);\n    this.data.feedHamster(hamster, hamsterFood);\n    task.count += 1; //Increment count, thread is running\n  }\n\n  returnOutput(task, resolve) {\n    let output = this.data.getOutput(task, this.habitat.transferrable);\n    if (task.sort) {\n      output = this.data.sortOutput(output, task.sort);\n    }\n    this.pool.tasks[task.id] = null; //Clean up our task, not needed any longer\n    resolve(output);\n  }\n\n  trainHamster(threadId, task, hamster, resolve, reject) {\n    let scope = this;\n    // Handle successful response from a thread\n    function onThreadResponse(messsage) {\n      let results = message.data;\n      scope.pool.destroyThread(task, threadId);\n      task.output[threadId] = results.data;\n      if (task.workers.length === 0 && task.count === task.threads) {\n        scope.returnOutput(task, resolve);\n      }\n      if (scope.pool.pending.length !== 0) {\n        scope.pool.processQueue(scope.pool.pending.shift());\n      }\n      if (!scope.persistence && !scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    // Handle error response from a thread\n    function onThreadError(error) {\n      this.logger.errorFromThread(error, reject);\n    }\n    // Register on message/error handlers\n    if (this.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nconst majorVersion = 4;\nconst minorVersion = 2;\nconst patchVersion = 2;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.legacy = this.isLegacyEnvironment();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer;\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n  }\n\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.isNode() && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  locateWorkerObject() {\n    return Worker || null;\n  }\n\n  locateSharedWorkerObject() {\n    return SharedWorker || null;\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWebWorker();\n  }\n\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    // Force legacy mode for known devices that don't support threading\n    if (this.isBrowser() && !this.isReactNative()) {\n      let isIE10 = this.habitat.isIE(10);\n      let userAgent = navigator.userAgent;\n      let lacksWorkerSupport = (typeof this.Worker === 'undefined');\n      let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n      if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1 || isIE10) {\n        this.legacy = true;\n      }\n    }\n    // Detect sharedWorker support for use within webworkers\n    if (this.webWorker && typeof this.SharedWorker !== 'undefined') {\n      try {\n        let workerBlob = hamstersData.generateBlob();\n        let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n        hamstersData.workerURI = workerBlob;\n      } catch (e) {\n        this.legacy = true;\n      }\n    }\n    // Final check, if we're in a shell environment or we have no worker object use legacy mode\n    if(!this.legacy) {\n      return this.isShell() || !this.locateWorkerObject();\n    }\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass data {\n\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.generateBlob = this.generateWorkerBlob;\n    this.determineSubArrays = this.determineSubArrayIndexes;\n    this.arrayFromIndex = this.subArrayFromIndex;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n    this.prepareMeal = this.prepareHamsterFood;\n    this.workerURI = null;\n  }\n\n\n  prepareHamsterFood(task, threadId) {\n    let hamsterFood = {};\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && key !== 'array') {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    if (task.indexes && task.threads !== 1) {\n      hamsterFood.array = this.data.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    } else {\n      hamsterFood.array = task.input.array;\n    }\n    if (task.operator && !hamsterFood.fn) {\n      hamsterFood.fn = task.operator;\n    }\n    return hamsterFood;\n  }\n\n  messageWorker(hamster, hamsterFood) {\n    if (this.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if (this.habitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.prepareTransferBuffers(hamsterFood));\n  }\n\n  prepareTransferBuffers(hamsterFood) {\n    let buffers = [];\n    let key = null;\n    if(this.habitat.transferrable) {\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n    }\n    return buffers;\n  }\n\n\n  prepareFunction(functionBody) {\n    if (!this.habitat.legacy) {\n      functionBody = String(functionBody);\n      if (!this.habitat.webWorker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  generateWorkerBlob(workerLogic) {\n    let functionString = '(' + String(workerLogic) + ')();';\n    let hamsterBlob = this.createBlob(functionString);\n    return URL.createObjectURL(hamsterBlob);\n  }\n\n  processDataType(dataType, buffer, transferrable) {\n    if(transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  prepareOutput(task, transferrable) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType, transferrable);\n    }\n    return task.output;\n  }\n\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  determineSubArrayIndexes(array, n) {\n    var i = 0;\n    let size = Math.ceil(array.length/n);\n    var indexes = [];\n    while(i < array.length) {\n      var start = i;\n      var end = ((i + size) - 1);\n      indexes.push({\n        start: start, \n        end: end\n      });\n      (i += size);\n    }\n    return indexes;\n  }\n\n  subArrayFromIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index.start, index.end);\n    } else {\n      return array.subarray(index.start, index.end);\n    }\n  }\n\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType, transferrable) {\n    if(!dataType || !transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength, transferrable);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersWheel from './wheel';\nimport hamstersLogger from './logger';\n\n'use strict';\n\nclass pool {\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.queueWork = this.addWorkToPending;\n    this.beginWork = this.startTask;\n    this.fetchHamster = this.grabHamster;\n    this.selectHamsterWheel = this.selectHamsterWheel;\n    this.markThreadReady = this.removeThreadFromRunning;\n    this.trackThread = this.keepTrackOfThread;\n  }\n\n  addWorkToPending(task, id, resolve, reject) {\n  \tthis.pending.push({\n  \t\titem: task,\n  \t\tthreadId: id,\n  \t\tpromiseResolve: resolve,\n  \t\tpromiseReject: reject\n  \t});\n  }\n\n  grabHamster(threadId, persistence, worker) {\n    if(persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster(hamstersHabitat, worker, hamstersData.workerURI);\n  }\n\n  newTask(taskOptions) {\n    let index = this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[(index - 1)];\n  }\n\n  removeThreadFromRunning(task, id) {\n    this.running.splice(this.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n  processQueue(hamster, item) {\n    if (!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  startTask(task, resolve, reject) {\n    return this.wheel(task, resolve, reject);\n  }\n\n  spawnHamsters(persistence, wheel, maxThreads) {\n  \tlet workerURI = null;\n    if(hamstersHabitat.legacy) {\n      return;\n    }\n    if(hamstersHabitat.browser) {\n      workerURI = hamstersData.generateBlob(wheel);\n    }\n    if (persistence) {\n      hamstersLogger.info(`${maxThreads} Logical Threads Detected, Spawning ${maxThreads} Hamsters`);\n      for (maxThreads; maxThreads > 0; maxThreads--) {\n        this.threads.push(this.spawnHamster(wheel, workerURI));\n      }\n      hamstersLogger.info(`${this.threads.length} hamsters ready and awaiting instructions`);\n    }\n  }\n\n  spawnHamster(wheel, workerURI) {\n    if (hamstersHabitat.ie10) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(workerURI, 'SharedHamsterWheel');\n    }\n    if ((hamstersHabitat.node || hamstersHabitat.reactNative) && !hamstersHabitat.browser) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    return new hamstersHabitat.Worker(workerURI);\n  }\n\n  selectHamsterWheel() {\n    if (hamstersHabitat.legacy) {\n      return hamstersWheel.legacy;\n    }\n    if(hamstersHabitat.webWorker) {\n      return hamstersWheel.worker;\n    }\n    return hamstersWheel.regular;\n  }\n\n  scheduleTask(task, wheel, maxThreads) {\n  \tif(this.running.length === maxThreads) {\n  \t\treturn this.addWorkToPending();\n  \t}\n  \treturn new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        wheel(task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n  \n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\n\n'use strict';\n\nclass wheel {\n\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  workerScaffold() {\n    'use strict';\n\n    var params = {};\n    var rtn = {};\n\n    function setDefaults(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: params.dataType\n      };\n    }\n\n    addEventListener('connect', function(incomingConnection) {\n      const port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', function(incomingMessage) {\n        setDefaults(incomingMessage);\n        eval(\"(\" + params.fn + \")\")();\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  regularScaffold() {\n    'use strict';\n\n    var params = {};\n    var rtn = {};\n\n    function setDefaults(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n    }\n\n    function prepareReturn(returnObject) {\n      var dataType = returnObject.dataType;\n      if(dataType) {\n        returnObject.data = typedArrayFromBuffer(dataType, returnObject.data);\n      }\n      return returnObject;\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function prepareTransferBuffers(hamsterFood) {\n      let buffers = [];\n      let key = null;\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n      return buffers;\n    }\n\n    function onmessage(incomingMessage) {\n      setDefaults(incomingMessage);\n      new Function(params.fn)();\n      postMessage(prepareReturn(rtn), prepareTransferBuffers(rtn));\n    };\n  }\n\n  legacyScaffold(params, resolve, reject) {\n    setTimeout(function() {\n      var rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      params.fn();\n      if (params.dataType) {\n        rtn.data = hamstersData.processDataType(params.dataType, rtn.data, hamstersHabitat.transferable);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersVersion from './version';\n\n'use strict';\n\nclass logger {\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Info: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('info', timeStampedMessage);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Warning: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('warning', timeStampedMessage);\n    console.warning(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Error: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('error', timeStampedMessage);\n    console.error(timeStampedMessage);\n    reject(timeStampedMessage);\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, string) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(string) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    let eventTypeResults;\n    if(eventType) {\n      tmpEntries = this.logBook[eventType];\n      finalResults = this.findStringInLogBook(tmpEntries, string);\n    } else {\n      let allResults = this.findStringInLogBookAllTypes(this.logBook);\n      if(all.length !== 0) {\n        finalResults = [finalResults, eventTypeResults].reduce(function(a, b) {\n          return a.concat(b);\n        });\n      }\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass tools {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.parseJson = this.parseJsonOnThread;\n    this.stringifyJson = this.stringifyJsonOnThread;\n  }\n\n  randomArray(inputAmount, onSuccess) {\n    let array = [];\n    while(inputAmount > 0) {\n      array[inputAmount] = Math.round(Math.random() * (100 - 1) + 1);\n      inputAmount -= 1;\n    }\n    onSuccess(array);\n  }\n\n  parseJsonOnThread(string, onSuccess) {\n    this.runHamsters({input: string}, function() {\n      rtn.data = JSON.parse(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  stringifyJsonOnThread(json, onSuccess) {\n    this.runHamsters({input: json}, function() {\n      rtn.data = JSON.stringify(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n}\n\nvar hamstersTools = new tools();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersTools;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/tools.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass memoizer {\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n  \tfor(var key in this.cache) {\n  \t\tif(this.cache.hasOwnProperty(key)) {\n  \t\t\tif(cacheItem[key].fn === cacheItem.fn) {\n  \t\t\t\tif(cacheItem[key].input === cacheItem.data) {\n  \t\t\t\t\tcachedResult = cacheItem[key].input;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn cachedResult || false;\n  }\n\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/memoizer.js"],"sourceRoot":""}