{"version":3,"sources":["webpack:///webpack/bootstrap 39e0e892669749aeb41c","webpack:///./src/hamsters.js","webpack:///./src/core/version.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/core/data.js","webpack:///./src/core/pool.js","webpack:///./src/core/wheel.js","webpack:///./src/core/logger.js","webpack:///./src/core/memoizer.js"],"names":["hamstersjs","persistence","memoize","atomics","debug","version","maxThreads","logicalThreads","habitat","data","pool","logger","memoizer","run","hamstersRun","promise","hamstersPromise","init","initializeLibrary","startOptions","info","processStartOptions","spawnHamsters","selectHamsterWheel","habitatKeys","key","hasOwnProperty","indexOf","toLowerCase","threadId","task","resolve","reject","trackThread","dataArray","arrayFromIndex","input","array","indexes","hamsterWheel","legacy","count","params","functionToRun","scope","id","tasks","length","threads","aggregate","output","workers","dataType","hamstersJob","prepareJob","Promise","hamstersTask","scaffold","registerTask","scheduleTask","then","results","catch","error","messsage","onSuccess","onError","hamsters","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","browser","isBrowser","webWorker","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferrable","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","isIE","isInternetExplorer","determineGlobalThreads","Worker","locateWorkerObject","sharedWorker","locateSharedWorkerObject","max","navigator","hardwareConcurrency","userAgent","os","cpus","SharedWorker","window","RegExp","isNaN","test","process","importScripts","global","Uint8Array","isIE10","lacksWorkerSupport","legacyAgents","workerBlob","generateBlob","SharedHamster","workerURI","e","SharedArrayBuffer","Proxy","hamstersHabitat","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","createBlob","createDataBlob","generateWorkerBlob","determineSubArrays","determineSubArrayIndexes","subArrayFromIndex","processDataType","sortOutput","sortArray","getOutput","prepareOutput","prepareFunction","feedHamster","messageWorker","prepareMeal","prepareHamsterFood","hamsterFood","hamster","port","postMessage","ie10","prepareTransferBuffers","buffers","buffer","push","Array","isArray","ArrayBuffer","functionBody","String","startingIndex","endingIndex","substring","workerLogic","functionString","hamsterBlob","URL","createObjectURL","typedArrayFromBuffer","arr","order","prototype","sort","call","a","b","reverse","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","Math","round","random","reduce","concat","i","len","bufferLength","offset","set","n","threadArrays","size","ceil","slice","subarray","hamstersData","running","pending","fetchHamster","grabHamster","markThreadReady","removeThreadFromRunning","item","promiseResolve","promiseReject","wheel","spawnHamster","index","splice","workerid","threadArray","addWorkToPending","trainHamster","keepTrackOfThread","onThreadResponse","message","returnOutputAndRemoveTask","processQueue","shift","terminate","onThreadError","errorFromThread","onmessage","onerror","worker","regular","hamsterPool","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","start","incomingMessage","eval","prepareReturn","returnObject","Function","setTimeout","transferable","hamstersWheel","logBook","warning","infoLog","warningLog","errorLog","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","searchLogEntries","searchLogBook","timeStamp","Date","now","timeStampedMessage","console","errorMessage","lineno","filename","eventType","logBookEntries","string","searchResults","searchString","eventTypeResults","tmpEntries","findStringInLogBook","finalResults","findStringInLogBookAllTypes","total","hamstersLogger","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","fn","cacheItem","cachedResult","cache","itemToCache","cachedItems","hamstersMemoizer"],"mappings":"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,KAAIC,kBAAkB,IAAIlH,OAAJ,EAAtB;;AAEA,KAAG,OAAO4D,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBqD,eAAjB;AACD,E;;;;;;;AC5HD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;;;sjBCvLtC;;AAEA;;;;;;;;;AASA;;;;;;;;AAEA;;KAEMjH,I;AAEJ,mBAAc;AAAA;;AACZ,UAAKkH,WAAL,GAAmB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","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39e0e892669749aeb41c","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n * Title: Hamsters.js\n * Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library\n * Author: Austin K. Smith\n * Contact: austin@asmithdev.com\n * Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n * License: Artistic License 2.0\n */\n\n'use strict';\n\n// Import core functionality\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersWheel from './core/wheel';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  constructor() {\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.debug = false;\n    this.version = hamstersVersion;\n    this.maxThreads = hamstersHabitat.logicalThreads;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.run = this.hamstersRun;\n    this.promise = this.hamstersPromise;\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    this.logger.info(`Preparing the hamster wheels & readying hamsters`);\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    hamstersPool.spawnHamsters(this.persistence, hamstersPool.selectHamsterWheel(), this.maxThreads);\n    delete this.init;\n  }\n\n  processStartOptions(startOptions) {\n    let habitatKeys = ['worker', 'sharedWorker', 'legacy'];\n    for (var key in startOptions) {\n      if (startOptions.hasOwnProperty(key)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n  }\n\n  legacyHamsterWheel(threadId, task, resolve, reject) {\n    this.pool.trackThread(task, threadId);\n    let dataArray = hamstersData.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    hamsterWheel.legacy(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  hamstersTask(params, functionToRun, scope) {\n    this.id = scope.pool.tasks.length;\n    this.threads = params.threads || 1;\n    this.count = 0;\n    this.aggregate = params.aggregate || false;\n    this.output = [];\n    this.workers = [];\n    this.memoize = params.memoize || false;\n    this.dataType = params.dataType ? params.dataType.toLowerCase() : null;\n    this.input = params;\n    this.input.hamstersJob = scope.data.prepareJob(functionToRun, scope.habitat);\n  }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      let task = new this.hamstersTask(params, functionToRun, this);\n      let scaffold = hamstersPool.selectHamsterWheel();\n      this.pool.registerTask(task);\n      this.pool.scheduleTask(task, this.persistence, scaffold, this.maxThreads).then((results) => {\n        resolve(results);\n      }).catch((error) => {\n        hamstersLogger.error(error.messsage, reject);\n      });\n    });\n  }\n\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    let task = new this.hamstersTask(params, functionToRun, this);\n    let scaffold = hamstersPool.selectHamsterWheel();\n    this.pool.registerTask(task);\n    this.pool.scheduleTask(task, this.persistence, scaffold, this.maxThreads).then((results) => {\n      onSuccess(results);\n    }).catch((error) => {\n      hamstersLogger.error(error.messsage, onError);\n    });\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nconst majorVersion = 4;\nconst minorVersion = 2;\nconst patchVersion = 2;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.legacy = this.isLegacyEnvironment();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer;\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n  }\n\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.isNode() && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  locateWorkerObject() {\n    return Worker || null;\n  }\n\n  locateSharedWorkerObject() {\n    return SharedWorker || null;\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWebWorker();\n  }\n\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    // Force legacy mode for known devices that don't support threading\n    if (this.isBrowser() && !this.isReactNative()) {\n      let isIE10 = this.habitat.isIE(10);\n      let userAgent = navigator.userAgent;\n      let lacksWorkerSupport = (typeof this.Worker === 'undefined');\n      let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n      if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1 || isIE10) {\n        this.legacy = true;\n      }\n    }\n    // Detect sharedWorker support for use within webworkers\n    if (this.webWorker && typeof this.SharedWorker !== 'undefined') {\n      try {\n        let workerBlob = hamstersData.generateBlob();\n        let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n        hamstersData.workerURI = workerBlob;\n      } catch (e) {\n        this.legacy = true;\n      }\n    }\n    // Final check, if we're in a shell environment or we have no worker object use legacy mode\n    if(!this.legacy) {\n      return this.isShell() || !this.locateWorkerObject();\n    }\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersHabitat from './habitat';\n\n'use strict';\n\nclass data {\n\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.generateBlob = this.generateWorkerBlob;\n    this.determineSubArrays = this.determineSubArrayIndexes;\n    this.arrayFromIndex = this.subArrayFromIndex;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n    this.prepareMeal = this.prepareHamsterFood;\n    this.workerURI = null;\n  }\n\n  prepareHamsterFood(task, threadId) {\n    let hamsterFood = task.input;\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && key !== 'array') {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    hamsterFood.array = task.input.array;\n    if (task.hamstersJob && !hamsterFood.hamstersJob) {\n      hamsterFood.hamstersJob = hamstersJob;\n    }\n    return hamsterFood;\n  }\n\n  messageWorker(hamster, hamsterFood) {\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if (hamstersHabitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.prepareTransferBuffers(hamsterFood));\n  }\n\n  prepareTransferBuffers(hamsterFood) {\n    let buffers = [];\n    let key = null;\n    if(hamstersHabitat.transferrable) {\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n    }\n    return buffers;\n  }\n\n  prepareFunction(functionBody, habitat) {\n    if (!habitat.legacy) {\n      functionBody = String(functionBody);\n      if (!habitat.webWorker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  generateWorkerBlob(workerLogic) {\n    let functionString = '(' + String(workerLogic) + ')();';\n    let hamsterBlob = this.createBlob(functionString);\n    return URL.createObjectURL(hamsterBlob);\n  }\n\n  processDataType(dataType, buffer) {\n    if(hamstersHabitat.transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  prepareOutput(task) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType);\n    }\n    return task.output;\n  }\n\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType || !hamstersHabitat.transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersWheel from './wheel';\nimport hamstersLogger from './logger';\n\n'use strict';\n\nclass pool {\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.grabHamster;\n    this.selectHamsterWheel = this.selectHamsterWheel;\n    this.markThreadReady = this.removeThreadFromRunning;\n  }\n\n  addWorkToPending(task, id, resolve, reject) {\n  \tthis.pending.push({\n  \t\titem: task,\n  \t\tthreadId: id,\n  \t\tpromiseResolve: resolve,\n  \t\tpromiseReject: reject\n  \t});\n  }\n\n  grabHamster(threadId, persistence, wheel) {\n    if(persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster(hamstersHabitat, wheel, hamstersData.workerURI);\n  }\n\n  registerTask(task) {\n    let index = this.tasks.push(task.id);\n    return this.tasks[(index - 1)];\n  }\n\n  removeThreadFromRunning(task, id) {\n    this.running.splice(this.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n  processQueue(hamster, item) {\n    if (!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  spawnHamsters(persistence, wheel, maxThreads) {\n  \tlet workerURI = null;\n    if(hamstersHabitat.legacy) {\n      return;\n    }\n    if(hamstersHabitat.browser) {\n      workerURI = hamstersData.generateBlob(wheel);\n    }\n    if (persistence) {\n      hamstersLogger.info(`${maxThreads} Logical Threads Detected, Spawning ${maxThreads} Hamsters`);\n      for (maxThreads; maxThreads > 0; maxThreads--) {\n        this.threads.push(this.spawnHamster(wheel, workerURI));\n      }\n      hamstersLogger.info(`${this.threads.length} hamsters ready and awaiting instructions`);\n    }\n  }\n\n  spawnHamster(wheel, workerURI) {\n    if (hamstersHabitat.ie10) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(workerURI, 'SharedHamsterWheel');\n    }\n    if ((hamstersHabitat.node || hamstersHabitat.reactNative) && !hamstersHabitat.browser) {\n      return new hamstersHabitat.Worker(wheel);\n    }\n    return new hamstersHabitat.Worker(workerURI);\n  }\n\n  prepareMeal(threadArray, task) {\n    let hamsterFood = {\n    \tarray: threadArray\n    };\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) == -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  hamsterWheel(array, task, persistence, wheel, resolve, reject) {\n    let threadId = this.running.length;\n    if(this.maxThreads === threadId) {\n      return this.addWorkToPending(array, task, threadId, resolve, reject);\n    }\n    let hamster = this.grabHamster(threadId, persistence, wheel);\n    this.trainHamster(threadId, task, hamster, persistence, resolve, reject);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    hamstersData.feedHamster(hamster, this.prepareMeal(array, task));\n    task.count += 1; //Increment count, thread is running\n  }\n\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = hamstersData.getOutput(task, hamstersHabitat.transferrable);\n    if (task.sort) {\n      output = hamstersData.sortOutput(output, task.sort);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n    resolve(output);\n  }\n\n  trainHamster(threadId, task, hamster, persistence, resolve, reject) {\n    let pool = this;\n    // Handle successful response from a thread\n    function onThreadResponse(message) {\n      let results = message.data;\n      pool.running.splice(pool.running.indexOf(threadId), 1); //Remove thread from running pool\n    \ttask.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n      task.output[threadId] = results.data; // Save results data to output\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        pool.processQueue(pool.pending.shift());\n      }\n      if (!persistence && !hamstersHabitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    // Handle error response from a thread\n    function onThreadError(error) {\n      hamstersLogger.errorFromThread(error, reject);\n    }\n    // Register on message/error handlers\n    if (hamstersHabitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  selectHamsterWheel() {\n    if (hamstersHabitat.legacy) {\n      return hamstersWheel.legacy;\n    }\n    if(hamstersHabitat.webWorker) {\n      return hamstersWheel.worker;\n    }\n    return hamstersWheel.regular;\n  }\n\n  scheduleTask(task, persistence, wheel, maxThreads) {\n  \tif(this.running.length === maxThreads) {\n  \t\treturn this.addWorkToPending(task, persistence, wheel, resolve, reject);\n  \t}\n  \tlet threadArrays = [];\n\t  if(task.input.array && task.threads !== 1) {\n\t    threadArrays = hamstersData.splitArrays(task.input.array, task.threads); //Divide our array into equal array sizes\n\t  }\n  \treturn new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n      \tif(threadArrays && task.threads !== 1) {\n        \tthis.hamsterWheel(threadArrays[i], task, persistence, wheel, resolve, reject);\n\t\t    } else {\n        \tthis.hamsterWheel(task.input.array, task, persistence, wheel, resolve, reject);\n\t\t    }\n        i += 1;\n      }\n    });\n  }\n  \n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads poold to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\n\n'use strict';\n\nclass wheel {\n\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  workerScaffold() {\n    'use strict';\n\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', function(incomingConnection) {\n      const port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', function(incomingMessage) {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  regularScaffold() {\n    'use strict';\n\n    self.params = {};\n    self.rtn = {};\n\n    function prepareReturn(returnObject) {\n      var dataType = returnObject.dataType;\n      if(dataType) {\n        returnObject.data = typedArrayFromBuffer(dataType, returnObject.data);\n      }\n      return returnObject;\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function prepareTransferBuffers(hamsterFood) {\n      let buffers = [];\n      let key = null;\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n      return buffers;\n    }\n\n    self.onmessage = function(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      new Function(params.hamstersJob)();\n      postMessage(prepareReturn(rtn), prepareTransferBuffers(rtn));\n    };\n  }\n\n  legacyScaffold(params, resolve, reject) {\n    setTimeout(function() {\n      self.rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      params.hamstersJob();\n      if (params.dataType) {\n        rtn.data = hamstersData.processDataType(params.dataType, rtn.data, hamstersHabitat.transferable);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nimport hamstersVersion from './version';\n\n'use strict';\n\nclass logger {\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Info: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('info', timeStampedMessage);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Warning: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('warning', timeStampedMessage);\n    console.warning(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js v${hamstersVersion} Error: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('error', timeStampedMessage);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, string) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(string) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    if(eventType) {\n      finalResults = this.findStringInLogBook(this.logBook[eventType], string);\n    } else {\n      finalResults = this.findStringInLogBookAllTypes(this.logBook);\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n'use strict';\n\nclass memoizer {\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n  \tfor(var key in this.cache) {\n  \t\tif(this.cache.hasOwnProperty(key)) {\n  \t\t\tif(cacheItem[key].fn === cacheItem.fn) {\n  \t\t\t\tif(cacheItem[key].input === cacheItem.data) {\n  \t\t\t\t\tcachedResult = cacheItem[key].input;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn cachedResult || false;\n  }\n\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/memoizer.js"],"sourceRoot":""}