{"version":3,"sources":["webpack:///webpack/bootstrap a43ede476412efeec0b5","webpack:///./src/hamsters.js","webpack:///./src/core/version.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/core/pool.js","webpack:///./src/core/data.js","webpack:///./src/core/tools.js","webpack:///./src/core/logger.js","webpack:///./src/core/memoizer.js"],"names":["hamstersjs","persistence","memoize","atomics","debug","version","maxThreads","logicalThreads","tools","habitat","data","pool","logger","memoizer","run","runHamsters","promise","hamstersPromise","loop","hamstersLoop","init","initializeLibrary","startOptions","info","processStartOptions","browser","reactNative","setupBrowserSupport","webWorker","SharedWorker","setupWorkerSupport","greaseHamsterWheel","spawnHamsters","chewGarbage","legacy","wheel","legacyHamsterWheel","hamsterWheel","isIE10","isIE","userAgent","navigator","lacksWorkerSupport","Worker","legacyAgents","indexOf","workerBlob","generateWorkerBlob","SharedHamster","uri","e","habitatKeys","key","hasOwnProperty","toLowerCase","hamsters","workerLogic","functionString","String","hamsterBlob","createBlob","URL","createObjectURL","giveHamsterWork","i","threads","push","spawnHamster","ie10","node","workerWorker","worker","self","addEventListener","port","ports","start","params","rtn","dataType","fn","eval","postMessage","results","typedArrayFromBuffer","buffer","types","Uint32Array","Uint16Array","Uint8Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","prepareTransferBuffers","hamsterFood","buffers","Array","isArray","ArrayBuffer","onmessage","Function","taskOptions","tasks","id","thread_id","task","resolve","reject","dataArray","arrayFromIndex","input","array","indexes","legacyProcessor","count","onSuccess","prepareFunction","operator","startIndex","limit","incrementBy","length","functionBody","startingIndex","endingIndex","substring","functionToRun","scope","aggregate","output","workers","determineSubArrays","Promise","hamstersTask","hamstersWork","then","catch","error","messsage","numberOfWorkers","sortOrder","sort","threadId","running","poolThread","hamster","prepareHamsterFood","trainHamster","trackThread","feedHamster","transferrable","onThreadResponse","chewThread","getOutput","sortOutput","pending","processQueue","shift","terminate","onThreadError","timeStamp","Date","now","message","lineno","filename","errors","onerror","cachedResult","cache","inputArray","SharedArrayBuffer","workerid","taskid","startTime","cb","agg","setTimeout","success","processDataType","transferable","item","splice","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","isBrowser","isWebWorker","isNode","isReactNative","shell","isShell","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","determineGlobalThreads","locateWorkerObject","sharedWorker","locateSharedWorkerObject","max","hardwareConcurrency","os","cpus","window","RegExp","isNaN","test","process","importScripts","global","Proxy","hamsterHabitat","hamsterPool","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","createDataBlob","determineSubArrayIndexes","subArrayFromIndex","sortArray","prepareOutput","arr","order","prototype","call","a","b","reverse","n","size","Math","ceil","end","index","console","log","slice","subarray","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","round","random","reduce","concat","len","bufferLength","offset","set","threadArrays","hamsterData","parseJson","parseJsonOnThread","stringifyJson","stringifyJsonOnThread","inputAmount","string","JSON","parse","json","stringify","hamsterTools","logBook","infoLog","warning","warningLog","errorLog","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","searchLogEntries","searchLogBook","timeStampedMessage","eventType","finalResults","tmpEntries","eventTypeResults","findStringInArray","total","hamsterLogger","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","cacheItem","itemToCache","cachedItems","hamsterMemoizer"],"mappings":"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,KAAKQ,kBAAL,EAA1B;AACD;;;gDAE0B;AACzB,cAAO,OAAO/B,iBAAP,KAA6B,WAApC;AACD;;;uCAEiB;AAChB,cAAO,OAAO6C,KAAP,KAAiB,WAAxB;AACD;;;;;;AAGH,KAAIC,iBAAiB,IAAInN,OAAJ,EAArB;;AAEA,KAAG,OAAOiL,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBiC,cAAjB;AACD,E;;;;;;;ACnGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2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","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a43ede476412efeec0b5","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n * Title: Hamsters.js\n * Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library\n * Author: Austin K. Smith\n * Contact: austin@asmithdev.com\n * Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n * License: Artistic License 2.0\n */\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamsterHabitat from './core/habitat';\nimport hamsterPool from './core/pool';\nimport hamsterData from './core/data';\nimport hamsterTools from './core/tools';\nimport hamsterLogger from './core/logger';\nimport hamsterMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  constructor() {\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.debug = false;\n    this.version = hamstersVersion;\n    this.maxThreads = hamsterHabitat.logicalThreads;\n    this.tools = hamsterTools;\n    this.habitat = hamsterHabitat;\n    this.data = hamsterData;\n    this.pool = hamsterPool;\n    this.logger = hamsterLogger;\n    this.memoizer = hamsterMemoizer;\n    this.run = this.runHamsters;\n    this.promise = this.hamstersPromise;\n    this.loop = this.hamstersLoop;\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    this.logger.info(`Preparing the hamster wheels & readying hamsters`);\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    if (this.habitat.browser && !this.habitat.reactNative) {\n      this.setupBrowserSupport();\n    }\n    if (this.habitat.webWorker && typeof this.habitat.SharedWorker !== 'undefined') {\n      this.setupWorkerSupport();\n    }\n    this.greaseHamsterWheel();\n    this.spawnHamsters();\n    this.chewGarbage(startOptions);\n    this.logger.info(`${this.maxThreads} hamsters ready and awaiting instructions`);\n  }\n\n  greaseHamsterWheel() {\n    if (this.habitat.legacy) {\n      this.wheel = this.legacyHamsterWheel;\n    } else {\n      this.wheel = this.hamsterWheel;\n    }\n  }\n\n  setupBrowserSupport() {\n    let isIE10 = this.habitat.isIE(10);\n    let userAgent = navigator.userAgent;\n    let lacksWorkerSupport = typeof this.habitat.Worker === 'undefined';\n    let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n    if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1 || isIE10) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  setupWorkerSupport() {\n    try {\n      let workerBlob = this.generateWorkerBlob();\n      let SharedHamster = new this.habitat.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      this.pool.uri = workerBlob;\n    } catch (e) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  processStartOptions(startOptions) {\n    let habitatKeys = ['worker', 'sharedWorker', 'legacy'];\n    for (var key in startOptions) {\n      if (startOptions.hasOwnProperty(key)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          hamsters.habitat[key] = startOptions[key];\n        } else {\n          hamsters[key] = startOptions[key];\n        }\n      }\n    }\n  }\n\n  generateWorkerBlob(workerLogic) {\n    let functionString = '(' + String(workerLogic) + ')();';\n    let hamsterBlob = this.data.createBlob(functionString);\n    return URL.createObjectURL(hamsterBlob);\n  }\n\n  spawnHamsters() {\n    if (this.habitat.legacy) {\n      return;\n    }\n    if (this.habitat.browser) {\n      this.pool.uri = this.generateWorkerBlob(this.giveHamsterWork());\n    }\n    if (this.persistence) {\n      let i = this.maxThreads;\n      this.logger.info(`${i} Logical Threads Detected, Spawning ${i} Hamsters`);\n      for (i; i > 0; i--) {\n        this.pool.threads.push(this.spawnHamster());\n      }\n    }\n  }\n\n  spawnHamster() {\n    if (this.habitat.ie10) {\n      return new this.habitat.Worker('src/common/wheel.min.js');\n    }\n    if (this.habitat.webWorker) {\n      return new this.habitat.SharedWorker(this.pool.uri, 'SharedHamsterWheel');\n    }\n    if (this.habitat.node) {\n      return new this.habitat.Worker(this.giveHamsterWork());\n    }\n    return new this.habitat.Worker(this.pool.uri);\n  }\n\n  giveHamsterWork() {\n    if (this.habitat.webWorker) {\n      return this.workerWorker;\n    }\n    return this.worker;\n  }\n\n\n  workerWorker() {\n    self.addEventListener(\"connect\", function(e) {\n      const port = e.ports[0];\n      port.start();\n      port.addEventListener(\"message\", function(e) {\n        self.params = e.data;\n        self.rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        let fn = eval(\"(\" + params.fn + \")\");\n        if (fn) {\n          fn();\n        }\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  worker() {\n    self.typedArrayFromBuffer = function(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    };\n\n    self.prepareTransferBuffers = function(hamsterFood) {\n      let buffers = [];\n      let key = null;\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n      return buffers;\n    }\n\n    self.onmessage = function(e) {\n      self.params = e.data;\n      self.rtn = {\n        data: [],\n        dataType: params.dataType ? params.dataType.toLowerCase() : null\n      };\n      let fn = new Function(params.fn);\n      if (fn) {\n        fn();\n      }\n      if (params.dataType) {\n        rtn.data = self.typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n      postMessage(rtn, self.prepareTransferBuffers(rtn));\n    };\n  }\n\n  newTask(taskOptions) {\n    this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[taskOptions.id];\n  }\n\n  legacyHamsterWheel(thread_id, task, resolve, reject) {\n    // this.trackThread(task, thread_id);\n    var dataArray = this.data.arrayFromIndex(task.input.array, task.indexes[thread_id]);\n    this.legacyProcessor(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  chewGarbage(startOptions) {\n    delete this.init;\n    startOptions = null;\n  }\n\n  hamstersLoop(input, onSuccess) {\n    let params = {\n      run: this.prepareFunction(input.operator),\n      init: input.startIndex || 0,\n      limit: input.limit || null,\n      array: input.array,\n      incrementBy: input.incrementBy || 1,\n      dataType: input.dataType || null,\n      worker: this.habitat.webWorker\n    };\n    this.runHamsters(params, function() {\n      let operator = params.run;\n      if (typeof operator === \"string\") {\n        if (params.worker) {\n          operator = eval(\"(\" + operator + \")\");\n        } else {\n          operator = new Function(operator);\n        }\n      }\n      if (!params.limit) {\n        params.limit = params.array.length;\n      }\n      var i = params.init;\n      for (i; i < params.limit; i += params.incrementBy) {\n        rtn.data[i] = operator(params.array[i]);\n      }\n    }, function(rtn) {\n      onSuccess(rtn);\n    }, input.threads, 1, input.dataType);\n  }\n\n  prepareFunction(functionBody) {\n    if (!this.habitat.legacy) {\n      functionBody = String(functionBody);\n      if (!this.habitat.webWorker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  hamstersTask(params, functionToRun, scope) {\n    this.id = scope.pool.tasks.length;\n    this.threads = params.threads || 1;\n    this.count = 0;\n    this.input = params;\n    this.aggregate = params.aggregate || true;\n    this.output = [];\n    this.workers = [];\n    this.operator = scope.prepareFunction(functionToRun);\n    this.memoize = params.memoize || false;\n    this.dataType = params.dataType ? params.dataType.toLowerCase() : null;\n    if(params.array) {\n      this.indexes = scope.data.determineSubArrays(params.array, this.threads);\n    }\n  }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      var task = new this.hamstersTask(params, functionToRun, this);\n      var logger = this.logger;\n      this.hamstersWork(task).then(function(results) {\n        resolve(results);\n      }).catch(function(error) {\n        logger.error(error.messsage);\n        reject(error);\n      });\n    });\n  }\n\n  runHamsters(params, functionToRun, onSuccess, numberOfWorkers, aggregate, dataType, memoize, sortOrder) {\n    // Convert old arguments into new params object\n    params.threads = params.threads || numberOfWorkers;\n    params.aggregate = params.aggregate || aggregate || true;\n    params.dataType = params.dataType || dataType;\n    params.memoize = params.memoize || memoize || false;\n    params.sort = params.sort || sortOrder;\n    // Create new task and execute\n    var task = new this.hamstersTask(params, functionToRun, this);\n    var logger = this.logger;\n    this.hamstersWork(task).then(function(results) {\n      onSuccess(results);\n    }).catch(function(error) {\n      logger.error(error.messsage);\n    });\n  }\n\n  hamstersWork(task) {\n    return new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        this.wheel(task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n\n  hamsterWheel(task, resolve, reject) {\n    let threadId = this.pool.running.length;\n    if(this.maxThreads === threadId) {\n      return this.poolThread(task, threadId, resolve, reject);\n    }\n    let hamster = this.persistence ? this.pool.threads[threadId] : spawnHamster();\n    let hamsterFood = this.prepareHamsterFood(task, threadId);\n    this.trainHamster(threadId, task, hamster, resolve, reject);\n    this.trackThread(task, threadId);\n    this.feedHamster(hamster, hamsterFood);\n    task.count += 1; //Increment count, thread is running\n  }\n\n  prepareHamsterFood(task, threadId) {\n    let hamsterFood = {};\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && key !== 'array') {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    if (task.indexes && task.threads !== 1) {\n      hamsterFood.array = this.data.arrayFromIndex(task.input.array, task.indexes[threadId]);\n    } else {\n      hamsterFood.array = task.input.array;\n    }\n    if (task.operator && !hamsterFood.fn) {\n      hamsterFood.fn = task.operator;\n    }\n    return hamsterFood;\n  }\n\n  feedHamster(hamster, hamsterFood) {\n    if (this.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if (this.habitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.prepareTransferBuffers(hamsterFood));\n  }\n\n  prepareTransferBuffers(hamsterFood) {\n    let buffers = [];\n    let key = null;\n    if(this.habitat.transferrable) {\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n    }\n    return buffers;\n  }\n\n  trainHamster(threadId, task, hamster, resolve, reject) {\n    var scope = this;\n    // Handle successful response from a thread\n    let onThreadResponse = function(e) {\n      var results = e.data;\n      scope.chewThread(task, threadId);\n      task.output[threadId] = results.data;\n      if (task.workers.length === 0 && task.count === task.threads) {\n        var output = scope.data.getOutput(task, scope.habitat.transferrable);\n        if (task.sort) {\n          output = scope.data.sortOutput(output, task.sort);\n        }\n        resolve(output);\n        scope.pool.tasks[task.id] = null; //Clean up our task, not needed any longer\n      }\n      if (scope.pool.pending.length !== 0) {\n        scope.processQueue(hamster, scope.pool.pending.shift());\n      } else if (!scope.persistence && !scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n\n    // Handle error response from a thread\n    let onThreadError = function(e) {\n      if (!scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread\n      }\n      var error = {\n        timeStamp: Date.now(),\n        threadId: threadId,\n        message: `Line ${e.lineno} in ${e.filename}: ${e.message}`\n      };\n      scope.pool.errors.push(error);\n      reject(error);\n    };\n\n    if (this.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  checkCache(fn, input, dataType) {\n    let cachedResult = this.cache[fn];\n    if (cachedResult) {\n      if (cachedResult[0] === input && cachedResult[2] === dataType) {\n        return cachedResult;\n      }\n    }\n  }\n\n  memoize(fn, inputArray, output, dataType) {\n    this.cache[fn] = [inputArray, output, dataType];\n  }\n\n\n  assignOutput(task, inputArray) {\n    if (!task || !inputArray || !this.habitat.atomics) {\n      return;\n    }\n    task.output = new SharedArrayBuffer(inputArray.length);\n  }\n\n  trackInput(inputArray, thread_id, task, hamsterFood) {\n    task.input.push({\n      input: inputArray,\n      workerid: thread_id,\n      taskid: task.id,\n      params: hamsterFood,\n      start: Date.now()\n    });\n  }\n\n  trackThread(task, id) {\n    task.startTime = Date.now();\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.pool.running.push(id); //Keep track of all currently running threads\n  }\n\n  poolThread(inputArray, hamsterFood, thread_id, cb, task, agg, memoize) {\n    this.pool.pending.push({\n      memoize: memoize,\n      input: inputArray,\n      params: hamsterFood,\n      workerid: thread_id,\n      onSuccess: cb,\n      task: task,\n      aggregate: agg\n    });\n  }\n\n  legacyProcessor(task, array, resolve, reject) {\n    setTimeout(function() {\n      var rtn = {\n        success: true,\n        data: []\n      };\n      var params = task.input;\n      params.array = array;\n      params.fn();\n      if (params.dataType) {\n        rtn.data = this.data.processDataType(params.dataType, rtn.data, this.habitat.transferable);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n\n  processQueue(hamster, item) {\n    if (!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  chewThread(task, id) {\n    this.pool.running.splice(this.pool.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nconst majorVersion = 4;\nconst minorVersion = 2;\nconst patchVersion = 2;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/version.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.legacy = this.isLegacyEnvironment();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer;\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n  }\n\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.isNode() && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  locateWorkerObject() {\n    return Worker || null;\n  }\n\n  locateSharedWorkerObject() {\n    return SharedWorker || null;\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWebWorker();\n  }\n\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    return this.isShell() || !this.locateWorkerObject();\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamsterHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass pool {\n  constructor() {\n    this.uri = null;\n    this.tasks = [];\n    this.errors = [];\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/pool.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass data {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.determineSubArrays = this.determineSubArrayIndexes;\n    this.arrayFromIndex = this.subArrayFromIndex;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n  }\n\n  processDataType(dataType, buffer, transferrable) {\n    if(transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  prepareOutput(task, transferrable) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType, transferrable);\n    }\n    return task.output;\n  }\n\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  determineSubArrayIndexes(array, n) {\n    if(n === 1) {\n      return \n    }\n    var i = 0;\n    var size = Math.ceil(array.length/n);\n    var indexes = [];\n    while(i < array.length) {\n      var start = i;\n      var end = ((i += size) - 1);\n      if(end > array.length -1) {\n        end = array.length;\n      }\n      var index = { start: start, end: end };\n      console.log(start, i, end);\n      indexes.push(index);\n    }\n    console.log(indexes);\n    return indexes;\n  }\n\n  subArrayFromIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index.start, index.end);\n    } else {\n      return array.subarray(index.start, index.end);\n    }\n  }\n\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType, transferrable) {\n    if(!dataType || !transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength, transferrable);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n\n}\n\nvar hamsterData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/data.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass tools {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.parseJson = this.parseJsonOnThread;\n    this.stringifyJson = this.stringifyJsonOnThread;\n  }\n\n\n  randomArray(inputAmount, onSuccess) {\n    let array = [];\n    while(inputAmount > 0) {\n      array[inputAmount] = Math.round(Math.random() * (100 - 1) + 1);\n      inputAmount -= 1;\n    }\n    onSuccess(array);\n  }\n\n  parseJsonOnThread(string, onSuccess) {\n    this.runHamsters({input: string}, function() {\n      rtn.data = JSON.parse(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  stringifyJsonOnThread(json, onSuccess) {\n    this.runHamsters({input: json}, function() {\n      rtn.data = JSON.stringify(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n}\n\nvar hamsterTools = new tools();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterTools;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/tools.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass logger {\n  constructor() {\n    this.logBook = {\n      'error': [], \n      'warning': [], \n      'info': []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js Info: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('info', timeStampedMessage);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js Warning: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('warning', timeStampedMessage);\n    console.warning(timeStampedMessage);\n  }\n\n  errorLog(message) {\n    let timeStamp = Date.now();\n    let timeStampedMessage = `Hamsters.js Error: ${message} @ ${timeStamp}`;\n    this.saveLogEntry('error', timeStampedMessage);\n    console.error(timeStampedMessage);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInArray(array, string) {\n    let results = [];\n    for (var i = 0; i < array.length; i++) {\n      if(array[i].indexOf(string) !== -1) {\n        results.push(array[i]);\n      }\n    }\n    return results;\n  }\n\n  searchLogBook(string, eventType) {\n    let finalResults = [];\n    let tmpEntries;\n    let eventTypeResults;\n    if(eventType) {\n      tmpEntries = this.logBook[eventType];\n      finalResults = this.findStringInArray(tmpEntries, string);\n    } else {\n      for(var key in this.logBook) {\n        if(this.logBook.hasOwnProperty(key)) {\n          tmpEntries = this.logBook[key];\n          eventTypeResults = this.findStringInArray(tmpEntries, string);\n          if(eventTypeResults.length !== 0) {\n            finalResults = [finalResults, eventTypeResults].reduce(function(a, b) {\n              return a.concat(b);\n            });\n          }\n        }\n      }\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamsterLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/logger.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass memoizer {\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  isItemCached(input, method) {\n  \treturn this.fetchItem({fn: method, data: input}) || false;\n  }\n\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n  \tfor(var key in this.cache) {\n  \t\tif(this.cache.hasOwnProperty(key)) {\n  \t\t\tif(cacheItem[key].fn === cacheItem.fn) {\n  \t\t\t\tif(cacheItem[key].input === cacheItem.data) {\n  \t\t\t\t\tcachedResult = cacheItem[key].input;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn cachedResult || false;\n  }\n\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamsterMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/memoizer.js"],"sourceRoot":""}