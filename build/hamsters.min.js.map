{"version":3,"sources":["webpack:///webpack/bootstrap 95c2ffcbce68dd4409a6","webpack:///./src/hamsters.js","webpack:///./src/core/version.js","webpack:///./src/core/habitat.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./src/core/pool.js","webpack:///./src/core/data.js","webpack:///./src/core/tools.js"],"names":["hamstersjs","persistence","memoize","atomics","debug","version","maxThreads","logicalThreads","tools","habitat","data","pool","run","runHamsters","promise","hamstersPromise","loop","hamstersLoop","init","initializeLibrary","startOptions","processStartOptions","browser","reactNative","setupBrowserSupport","webWorker","SharedWorker","setupWorkerSupport","greaseHamsterWheel","spawnHamsters","chewGarbage","legacy","wheel","legacyHamsterWheel","hamsterWheel","isIE10","isIE","userAgent","navigator","lacksWorkerSupport","Worker","legacyAgents","indexOf","workerBlob","generateWorkerBlob","SharedHamster","uri","e","habitatKeys","key","hasOwnProperty","toLowerCase","hamsters","workerLogic","functionString","String","hamsterBlob","createBlob","URL","createObjectURL","giveHamsterWork","i","threads","push","spawnHamster","ie10","node","workerWorker","worker","self","addEventListener","port","ports","start","params","rtn","dataType","fn","eval","postMessage","results","typedArrayFromBuffer","buffer","types","Uint32Array","Uint16Array","Uint8Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","onmessage","Function","buffers","bufferInstance","ArrayBuffer","constructor","prototype","__proto__","taskOptions","tasks","id","thread_id","task","resolve","reject","dataArray","arrayFromIndex","array","indexes","legacyProcessor","count","input","onSuccess","prepareFunction","operator","startIndex","limit","incrementBy","length","functionBody","startingIndex","endingIndex","substring","functionToRun","Promise","newTask","work","numberOfWorkers","aggregateThreadOutputs","sortOrder","arrayType","performance","workers","output","cacheResults","determineSubArrays","workerCount","prepareAndSaveTaskOptions","hamstersWork","then","catch","error","errorMessage","timeStamp","message","console","threadId","running","poolThread","hamster","hamsterFood","prepareHamsterFood","trainHamster","trackThread","feedHamster","scope","onThreadResponse","threadResponse","chewThread","getOutput","transferrable","order","sortOutput","pending","processQueue","shift","terminate","onThreadError","Date","now","lineno","filename","errors","onerror","cachedResult","cache","inputArray","SharedArrayBuffer","workerid","taskid","startTime","cb","agg","aggregate","setTimeout","success","processDataType","transferable","item","splice","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","isBrowser","isWebWorker","isNode","isReactNative","shell","isShell","supportsTransferrableObjects","isLegacyEnvironment","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","determineGlobalThreads","locateWorkerObject","sharedWorker","locateSharedWorkerObject","max","hardwareConcurrency","os","cpus","window","RegExp","isNaN","test","process","importScripts","global","Proxy","hamsterHabitat","hamsterPool","randomArray","aggregateArrays","splitArrays","splitArrayIntoSubArrays","createDataBlob","determineSubArrayIndexes","subArrayFromIndex","sortArray","prepareOutput","arr","Array","sort","call","a","b","reverse","n","size","Math","ceil","end","index","slice","subarray","textContent","Blob","BlobMaker","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","round","random","reduce","concat","len","bufferLength","offset","set","threadArrays","hamsterData","parseJson","parseJsonOnThread","stringifyJson","stringifyJsonOnThread","inputAmount","string","JSON","parse","json","stringify","hamsterTools"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;;;;;;;;;AASA;;AAEA;;;;KAEMxN,I,GACJ,gBAAc;AAAA;;AACZ,QAAKmC,GAAL,GAAW,IAAX;AACA,QAAKwD,KAAL,GAAa,EAAb;AACA,QAAKyE,MAAL,GAAc,EAAd;AACA,QAAKjH,OAAL,GAAe,EAAf;AACA,QAAKwF,OAAL,GAAe,EAAf;AACA,QAAKgB,OAAL,GAAe,EAAf;AACD,E;;AAGH,KAAI8D,cAAc,IAAIzN,IAAJ,EAAlB;;AAEA,KAAG,OAAOsL,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBkC,WAAjB;AACD,E;;;;;;AC5BD;;;;;;;;;AASA;;AAEA;;;;;;KAEM1N,I;AACJ,mBAAc;AAAA;;AACZ,UAAK2N,WAAL,GAAmB,KAAKA,WAAxB;AACA,UAAKC,eA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","file":"hamsters.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95c2ffcbce68dd4409a6","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/*\n * Title: Hamsters.js\n * Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library\n * Author: Austin K. Smith\n * Contact: austin@asmithdev.com\n * Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n * License: Artistic License 2.0\n */\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamsterHabitat from './core/habitat';\nimport hamsterPool from './core/pool';\nimport hamsterData from './core/data';\nimport hamsterTools from './core/tools';\n\nclass hamstersjs {\n\n  constructor() {\n    this.persistence = true;\n    this.memoize = false;\n    this.atomics = false;\n    this.debug = false;\n    this.version = hamstersVersion;\n    this.maxThreads = hamsterHabitat.logicalThreads;\n    this.tools = hamsterTools;\n    this.habitat = hamsterHabitat;\n    this.data = hamsterData;\n    this.pool = hamsterPool;\n    this.run = this.runHamsters;\n    this.promise = this.hamstersPromise;\n    this.loop = this.hamstersLoop;\n    this.init = this.initializeLibrary;\n  }\n\n  initializeLibrary(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    if (this.habitat.browser && !this.habitat.reactNative) {\n      this.setupBrowserSupport();\n    }\n    if (this.habitat.webWorker && typeof this.habitat.SharedWorker !== 'undefined') {\n      this.setupWorkerSupport();\n    }\n    this.greaseHamsterWheel();\n    this.spawnHamsters();\n    this.chewGarbage(startOptions);\n  }\n\n  greaseHamsterWheel() {\n    if (this.habitat.legacy) {\n      this.wheel = this.legacyHamsterWheel;\n    } else {\n      this.wheel = this.hamsterWheel;\n    }\n  }\n\n  setupBrowserSupport() {\n    let isIE10 = this.habitat.isIE(10);\n    let userAgent = navigator.userAgent;\n    let lacksWorkerSupport = typeof this.habitat.Worker === 'undefined';\n    let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n    if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1 || isIE10) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  setupWorkerSupport() {\n    try {\n      let workerBlob = this.generateWorkerBlob();\n      let SharedHamster = new this.habitat.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      this.pool.uri = workerBlob;\n    } catch (e) {\n      this.habitat.legacy = true;\n    }\n  }\n\n  processStartOptions(startOptions) {\n    let habitatKeys = ['worker', 'sharedWorker', 'legacy'];\n    for (var key in startOptions) {\n      if (startOptions.hasOwnProperty(key)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          hamsters.habitat[key] = startOptions[key];\n        } else {\n          hamsters[key] = startOptions[key];\n        }\n      }\n    }\n  }\n\n  generateWorkerBlob(workerLogic) {\n    let functionString = '(' + String(workerLogic) + ')();';\n    let hamsterBlob = this.data.createBlob(functionString);\n    return URL.createObjectURL(hamsterBlob);\n  }\n\n  spawnHamsters() {\n    if (this.habitat.legacy) {\n      return;\n    }\n    if (this.habitat.browser) {\n      this.pool.uri = this.generateWorkerBlob(this.giveHamsterWork());\n    }\n    if (this.persistence) {\n      let i = this.maxThreads;\n      for (i; i > 0; i--) {\n        this.pool.threads.push(this.spawnHamster());\n      }\n    }\n  }\n\n  spawnHamster() {\n    if (this.habitat.ie10) {\n      return new this.habitat.Worker('src/common/wheel.min.js');\n    }\n    if (this.habitat.webWorker) {\n      return new this.habitat.SharedWorker(this.pool.uri, 'SharedHamsterWheel');\n    }\n    if (this.habitat.node) {\n      return new this.habitat.Worker(this.giveHamsterWork());\n    }\n    return new this.habitat.Worker(this.pool.uri);\n  }\n\n  giveHamsterWork() {\n    if (this.habitat.webWorker) {\n      return this.workerWorker;\n    }\n    return this.worker;\n  }\n\n\n  workerWorker() {\n    self.addEventListener(\"connect\", function(e) {\n      const port = e.ports[0];\n      port.start();\n      port.addEventListener(\"message\", function(e) {\n        self.params = e.data;\n        self.rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        let fn = eval(\"(\" + params.fn + \")\");\n        if (fn) {\n          fn();\n        }\n        port.postMessage({\n          results: rtn\n        });\n      }, false);\n    }, false);\n  }\n\n  worker() {\n    self.typedArrayFromBuffer = function(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    };\n\n    self.onmessage = function(e) {\n      self.params = e.data;\n      self.rtn = {\n        data: [],\n        dataType: params.dataType.toLowerCase()\n      };\n      let fn = new Function(params.fn);\n      if (fn) {\n        fn();\n      }\n      let buffers = [];\n      let bufferInstance = null;\n      if(typeof ArrayBuffer !== 'undefined') {\n        bufferInstance = new ArrayBuffer().constructor.prototype.__proto__.constructor;\n      }\n      for (var key in rtn) {\n        if (rtn.hasOwnProperty(key)) {\n          if(rtn[key].buffer) {\n            buffers.push(rtn[key].buffer);\n          }\n        }\n      }\n      if (params.dataType) {\n        rtn.data = self.typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n      postMessage({\n        results: rtn\n      }, buffers);\n    };\n  }\n\n  newTask(taskOptions) {\n    this.pool.tasks.push(taskOptions);\n    return this.pool.tasks[taskOptions.id];\n  }\n\n  legacyHamsterWheel(thread_id, task, resolve, reject) {\n    // this.trackThread(task, thread_id);\n    var dataArray = this.data.arrayFromIndex(task.params.array, task.indexes[thread_id]);\n    this.legacyProcessor(task, dataArray, resolve, reject);\n    task.count += 1; //Thread finished\n  }\n\n  chewGarbage(startOptions) {\n    delete this.init;\n    startOptions = null;\n  }\n\n  hamstersLoop(input, onSuccess) {\n    let params = {\n      run: this.prepareFunction(input.operator),\n      init: input.startIndex || 0,\n      limit: input.limit || null,\n      array: input.array,\n      incrementBy: input.incrementBy || 1,\n      dataType: input.dataType || null,\n      worker: this.habitat.webWorker\n    };\n    this.runHamsters(params, function() {\n      let operator = params.run;\n      if (typeof operator === \"string\") {\n        if (params.worker) {\n          operator = eval(\"(\" + operator + \")\");\n        } else {\n          operator = new Function(operator);\n        }\n      }\n      if (!params.limit) {\n        params.limit = params.array.length;\n      }\n      var i = params.init;\n      for (i; i < params.limit; i += params.incrementBy) {\n        rtn.data[i] = operator(params.array[i]);\n      }\n    }, function(rtn) {\n      onSuccess(rtn);\n    }, input.threads, 1, input.dataType);\n  }\n\n  prepareFunction(functionBody) {\n    if (!this.habitat.legacy) {\n      functionBody = String(functionBody);\n      if (!this.habitat.webWorker) {\n        let startingIndex = (functionBody.indexOf(\"{\") + 1);\n        let endingIndex = (functionBody.length - 1);\n        return functionBody.substring(startingIndex, endingIndex);\n      }\n    }\n    return functionBody;\n  }\n\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      let task = this.newTask(params);\n      let results = this.work(task, functionToRun);\n      if (results) {\n        resolve(results);\n      } else {\n        reject('Error processing');\n      }\n    });\n  }\n\n  // Converts old run params into new format\n  prepareAndSaveTaskOptions(params, functionToRun, onSuccess, numberOfWorkers, aggregateThreadOutputs, dataType, memoize, sortOrder) {\n    var arrayType = 'na';\n    if (params.dataType) {\n      arrayType = params.dataType.toLowerCase();\n    }\n    if (dataType) {\n      arrayType = dataType.toLowerCase();\n    }\n    var task = {\n      params: params,\n      id: this.pool.tasks.length,\n      count: 0,\n      performance: [],\n      workers: [],\n      input: [],\n      output: [],\n      threads: params.threads || numberOfWorkers || 1,\n      operator: this.prepareFunction(functionToRun),\n      sortOrder: params.sortOrder || sortOrder,\n      cacheResults: params.memoize || memoize || false,\n      aggregateThreadOutputs: aggregateThreadOutputs || false,\n      dataType: arrayType,\n      onSuccess: onSuccess\n    };\n    if (params.array) {\n      task.indexes = this.data.determineSubArrays(params.array, task.threads);\n    }\n    return this.newTask(task);\n  }\n\n  runHamsters(params, functionToRun, onSuccess, numberOfWorkers, aggregateThreadOutputs, dataType, memoize, sortOrder) {\n    // Legacy processing use only 1 simulated thread, avoid doing extra work splitting & aggregating\n    let workerCount = (this.habitat.legacy ? 1 : (numberOfWorkers || 1));\n    let task = this.prepareAndSaveTaskOptions(params, functionToRun, onSuccess, workerCount, aggregateThreadOutputs, dataType, memoize, sortOrder);\n    this.hamstersWork(task).then(function(results) {\n      onSuccess(results);\n    }).catch(function(error) {\n      let errorMessage = `Hamsters.js Error @ ${error.timeStamp} : ${error.message}`;\n      console.error(errorMessage, error);\n    });\n  }\n\n  hamstersWork(task) {\n    return new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        this.wheel(task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n\n  hamsterWheel(task, resolve, reject) {\n    let threadId = this.pool.running.length;\n    if(this.maxThreads === threadId) {\n      return this.poolThread(task, threadId, resolve, reject);\n    }\n    let hamster = this.persistence ? this.pool.threads[threadId] : spawnHamster();\n    let hamsterFood = this.prepareHamsterFood(task, threadId);\n    this.trainHamster(threadId, task, hamster, resolve, reject);\n    this.trackThread(task, threadId);\n    this.feedHamster(hamster, hamsterFood);\n    task.count += 1; //Increment count, thread is running\n  }\n\n  prepareHamsterFood(task, threadId) {\n    let hamsterFood = {};\n    for (var key in task.params) {\n      if (task.params.hasOwnProperty(key) && key !== 'array') {\n        hamsterFood[key] = task.params[key];\n      }\n    }\n    if (task.indexes && task.threads !== 0) {\n      hamsterFood.array = this.data.arrayFromIndex(task.params.array, task.indexes[threadId]);\n    }\n    if (task.operator && !hamsterFood.fn) {\n      hamsterFood.fn = task.operator;\n    }\n    return hamsterFood;\n  }\n\n  feedHamster(hamster, hamsterFood) {\n    if (this.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if (this.habitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    let buffers = [],\n      key;\n    for (key in hamsterFood) {\n      if (hamsterFood.hasOwnProperty(key) && hamsterFood[key] && hamsterFood[key].buffer) {\n        buffers.push(hamsterFood[key].buffer);\n      }\n    }\n    return hamster.postMessage(hamsterFood, buffers);\n  }\n\n  trainHamster(threadId, task, hamster, resolve, reject) {\n    var scope = this;\n    // Handle successful response from a thread\n    var onThreadResponse = function(e, results) {\n      let threadResponse = e.data.results;\n      scope.chewThread(task, threadId);\n      results = e.data.results;\n      task.output[threadId] = results.data;\n      if (task.workers.length === 0 && task.count === task.threads) {\n        var output = scope.data.getOutput(task.output, task.aggregateThreadOutputs, task.dataType, scope.habitat.transferrable);\n        if (task.order) {\n          resolve(scope.data.sortOutput(output, task.order));\n        } else {\n          resolve(output);\n        }\n        scope.pool.tasks[task.id] = null; //Clean up our task, not needed any longer\n      }\n      if (scope.pool.pending.length !== 0) {\n        scope.processQueue(hamster, scope.pool.pending.shift());\n      } else if (!scope.persistence && !scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n\n    // Handle error response from a thread\n    var onThreadError = function(e) {\n      if (!scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread\n      }\n      var error = {\n        timeStamp: Date.now(),\n        threadId: threadId,\n        message: `Line ${e.lineno} in ${e.filename}: ${e.message}`\n      };\n      scope.pool.errors.push(error);\n      reject(error);\n    };\n\n    if (this.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  checkCache(fn, input, dataType) {\n    let cachedResult = this.cache[fn];\n    if (cachedResult) {\n      if (cachedResult[0] === input && cachedResult[2] === dataType) {\n        return cachedResult;\n      }\n    }\n  }\n\n  memoize(fn, inputArray, output, dataType) {\n    this.cache[fn] = [inputArray, output, dataType];\n  }\n\n\n  assignOutput(task, inputArray) {\n    if (!task || !inputArray || !this.habitat.atomics) {\n      return;\n    }\n    task.output = new SharedArrayBuffer(inputArray.length);\n  }\n\n  trackInput(inputArray, thread_id, task, hamsterFood) {\n    task.input.push({\n      input: inputArray,\n      workerid: thread_id,\n      taskid: task.id,\n      params: hamsterFood,\n      start: Date.now()\n    });\n  }\n\n  trackThread(task, id) {\n    task.startTime = Date.now();\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.pool.running.push(id); //Keep track of all currently running threads\n  }\n\n  poolThread(inputArray, hamsterFood, thread_id, cb, task, agg, memoize) {\n    this.pool.pending.push({\n      memoize: memoize,\n      input: inputArray,\n      params: hamsterFood,\n      workerid: thread_id,\n      onSuccess: cb,\n      task: task,\n      aggregate: agg\n    });\n  }\n\n  legacyProcessor(task, array, resolve, reject) {\n    setTimeout(function() {\n      var rtn = {\n        success: true,\n        data: []\n      };\n      var params = task.params;\n      params.array = array;\n      params.fn();\n      if (params.dataType && params.dataType != \"na\") {\n        rtn.data = this.data.processDataType(params.dataType, rtn.data, this.habitat.transferable);\n        rtn.dataType = params.dataType;\n      }\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n\n  processQueue(hamster, item) {\n    if (!item) {\n      return;\n    }\n    this.wheel(item.input, item.params, item.aggregate, item.onSuccess, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  }\n\n  chewThread(task, id) {\n    this.pool.running.splice(this.pool.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  }\n\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/hamsters.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nconst majorVersion = 4;\nconst minorVersion = 2;\nconst patchVersion = 2;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/version.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass habitat {\n  constructor() {\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.legacy = this.isLegacyEnvironment();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer;\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n  }\n\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.isNode() && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  locateWorkerObject() {\n    return Worker || null;\n  }\n\n  locateSharedWorkerObject() {\n    return SharedWorker || null;\n  }\n\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isBrowser() && !this.isWebWorker();\n  }\n\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object';\n  }\n\n  isShell() {\n    return this.isBrowser() && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  isLegacyEnvironment() {\n    return this.isShell() || !this.locateWorkerObject();\n  }\n\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n}\n\nvar hamsterHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass pool {\n  constructor() {\n    this.uri = null;\n    this.tasks = [];\n    this.errors = [];\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/pool.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass data {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.determineSubArrays = this.determineSubArrayIndexes;\n    this.arrayFromIndex = this.subArrayFromIndex;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n  }\n\n  processDataType(dataType, buffer, transferrable) {\n    if(transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  prepareOutput(output, aggregate, dataType, transferrable) {\n    if(aggregate && output.length > 1 && output.length <= 20) {\n      return this.aggregateThreadOutputs(output, dataType, transferrable);\n    }\n    return output;\n  }\n\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n  determineSubArrayIndexes(array, n) {\n    var i = 0;\n    let size = Math.ceil(array.length/n);\n    var indexes = [];\n    while(i < array.length) {\n      indexes.push({\n        start: i, \n        end: ((i += size) - 1)\n      });\n    }\n    return indexes;\n  }\n\n  subArrayFromIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index.start, index.end);\n    } else {\n      return array.subarray(index.start, index.end);\n    }\n  }\n\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = (BlobBuilder || WebKitBlobBuilder || MozBlobBuilder || MSBlobBuilder);\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  aggregateThreadOutputs(input, dataType, transferrable) {\n    if(!dataType || !transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength, transferrable);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n\n}\n\nvar hamsterData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/data.js","/*\n* Title: Hamsters.js\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\n/* jshint esversion: 6 */\n\n'use strict';\n\nclass tools {\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.parseJson = this.parseJsonOnThread;\n    this.stringifyJson = this.stringifyJsonOnThread;\n  }\n\n\n  randomArray(inputAmount, onSuccess) {\n    let array = [];\n    while(inputAmount > 0) {\n      array[inputAmount] = Math.round(Math.random() * (100 - 1) + 1);\n      inputAmount -= 1;\n    }\n    onSuccess(array);\n  }\n\n  parseJsonOnThread(string, onSuccess) {\n    this.runHamsters({input: string}, function() {\n      rtn.data = JSON.parse(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n\n  stringifyJsonOnThread(json, onSuccess) {\n    this.runHamsters({input: json}, function() {\n      rtn.data = JSON.stringify(params.input);\n    }, function(output) {\n      onSuccess(output[0]);\n    }, 1);\n  }\n}\n\nvar hamsterTools = new tools();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterTools;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/tools.js"],"sourceRoot":""}